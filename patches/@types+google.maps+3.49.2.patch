diff --git a/node_modules/@types/google.maps/index.d.ts b/node_modules/@types/google.maps/index.d.ts
index cf7e2f7..07b3928 100644
--- a/node_modules/@types/google.maps/index.d.ts
+++ b/node_modules/@types/google.maps/index.d.ts
@@ -44,12 +44,12 @@ declare namespace google.maps {
     /**
      * Returns the map on which this layer is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Renders the layer on the specified map. If map is set to
      * <code>null</code>, the layer will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
   }
 }
 declare namespace google.maps {
@@ -58,7 +58,7 @@ declare namespace google.maps {
    * Used for setting the map&#39;s camera options.
    */
   interface CameraOptions {
-    center?: google.maps.LatLngLiteral|google.maps.LatLng;
+    center?: google.maps.LatLngLiteral | google.maps.LatLng;
     heading?: number;
     tilt?: number;
     zoom?: number;
@@ -86,16 +86,16 @@ declare namespace google.maps {
      * A circle on the Earth&#39;s surface; also known as a &quot;spherical
      * cap&quot;.
      */
-    constructor(circleOrCircleOptions?: google.maps.Circle|null|
-                google.maps.CircleLiteral|google.maps.CircleOptions);
+    constructor(circleOrCircleOptions?: google.maps.Circle | null |
+      google.maps.CircleLiteral | google.maps.CircleOptions);
     /**
      * Gets the <code>LatLngBounds</code> of this Circle.
      */
-    getBounds(): google.maps.LatLngBounds|null;
+    getBounds(): google.maps.LatLngBounds | null;
     /**
      * Returns the center of this circle.
      */
-    getCenter(): google.maps.LatLng|null;
+    getCenter(): google.maps.LatLng | null;
     /**
      * Returns whether this circle can be dragged by the user.
      */
@@ -107,7 +107,7 @@ declare namespace google.maps {
     /**
      * Returns the map on which this circle is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Returns the radius of this circle (in meters).
      */
@@ -119,7 +119,7 @@ declare namespace google.maps {
     /**
      * Sets the center of this circle.
      */
-    setCenter(center: google.maps.LatLng|null|google.maps.LatLngLiteral): void;
+    setCenter(center: google.maps.LatLng | null | google.maps.LatLngLiteral): void;
     /**
      * If set to <code>true</code>, the user can drag this circle over the map.
      */
@@ -134,8 +134,8 @@ declare namespace google.maps {
      * Renders the circle on the specified map. If map is set to
      * <code>null</code>, the circle will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.CircleOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.CircleOptions | null): void;
     /**
      * Sets the radius of this circle (in meters).
      */
@@ -154,7 +154,7 @@ declare namespace google.maps {
     /**
      * The center of the Circle.
      */
-    center: google.maps.LatLng|google.maps.LatLngLiteral;
+    center: google.maps.LatLng | google.maps.LatLngLiteral;
     /**
      * The radius in meters on the Earth&#39;s surface.
      */
@@ -170,68 +170,68 @@ declare namespace google.maps {
     /**
      * The center of the Circle.
      */
-    center?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    center?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * Indicates whether this <code>Circle</code> handles mouse events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can drag this circle over the map.
      * @defaultValue <code>false</code>
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can edit this circle by dragging
      * the control points shown at the center and around the circumference of
      * the circle.
      * @defaultValue <code>false</code>
      */
-    editable?: boolean|null;
+    editable?: boolean | null;
     /**
      * The fill color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    fillColor?: string|null;
+    fillColor?: string | null;
     /**
      * The fill opacity between 0.0 and 1.0.
      */
-    fillOpacity?: number|null;
+    fillOpacity?: number | null;
     /**
      * Map on which to display the Circle.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The radius in meters on the Earth&#39;s surface.
      */
-    radius?: number|null;
+    radius?: number | null;
     /**
      * The stroke color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    strokeColor?: string|null;
+    strokeColor?: string | null;
     /**
      * The stroke opacity between 0.0 and 1.0.
      */
-    strokeOpacity?: number|null;
+    strokeOpacity?: number | null;
     /**
      * The stroke position.
      * @defaultValue {@link google.maps.StrokePosition.CENTER}
      */
-    strokePosition?: google.maps.StrokePosition|null;
+    strokePosition?: google.maps.StrokePosition | null;
     /**
      * The stroke width in pixels.
      */
-    strokeWeight?: number|null;
+    strokeWeight?: number | null;
     /**
      * Whether this circle is visible on the map.
      * @defaultValue <code>true</code>
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * The zIndex compared to other polys.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -346,9 +346,9 @@ declare namespace google.maps {
    */
   interface CoordinateTransformer {
     fromLatLngAltitude(
-        latLngAltitude: google.maps.LatLngAltitude|
+      latLngAltitude: google.maps.LatLngAltitude |
         google.maps.LatLngAltitudeLiteral,
-        rotations?: Float32Array, scale?: Float32Array): Float64Array;
+      rotations?: Float32Array, scale?: Float32Array): Float64Array;
     getCameraParams(): google.maps.CameraParams;
   }
 }
@@ -372,7 +372,7 @@ declare namespace google.maps {
      * <code>Data</code> object is a collection of <a
      * href="#Data.Feature"><code>Features</code></a>.
      */
-    constructor(options?: google.maps.Data.DataOptions|null);
+    constructor(options?: google.maps.Data.DataOptions | null);
     /**
      * Adds a feature to the collection, and returns the added feature. <p> If
      * the feature has an ID, it will replace any existing feature in the
@@ -384,15 +384,15 @@ declare namespace google.maps {
      * <code>1234</code> will replace a feature with ID <code>'1234'</code>, and
      * vice versa.
      */
-    add(feature?: google.maps.Data.Feature|null|
-        google.maps.Data.FeatureOptions): google.maps.Data.Feature;
+    add(feature?: google.maps.Data.Feature | null |
+      google.maps.Data.FeatureOptions): google.maps.Data.Feature;
     /**
      * Adds GeoJSON features to the collection. Give this method a parsed JSON.
      * The imported features are returned. Throws an exception if the GeoJSON
      * could not be imported.
      */
-    addGeoJson(geoJson: object, options?: google.maps.Data.GeoJsonOptions|null):
-        google.maps.Data.Feature[];
+    addGeoJson(geoJson: object, options?: google.maps.Data.GeoJsonOptions | null):
+      google.maps.Data.Feature[];
     /**
      * Checks whether the given feature is in the collection.
      */
@@ -414,7 +414,7 @@ declare namespace google.maps {
      * <code>"Point"</code>, <code>"LineString"</code> or
      * <code>"Polygon"</code>.
      */
-    getControls(): string[]|null;
+    getControls(): string[] | null;
     /**
      * Returns the current drawing mode of the given Data layer. A drawing mode
      * of <code>null</code> means that the user can interact with the map as
@@ -422,23 +422,23 @@ declare namespace google.maps {
      * <code>null</code>, <code>"Point"</code>, <code>"LineString"</code> or
      * <code>"Polygon"</code>.
      */
-    getDrawingMode(): string|null;
+    getDrawingMode(): string | null;
     /**
      * Returns the feature with the given ID, if it exists in the collection.
      * Otherwise returns <code>undefined</code>. <p> Note that the IDs
      * <code>1234</code> and <code>'1234'</code> are equivalent. Either can be
      * used to look up the same feature.
      */
-    getFeatureById(id: number|string): google.maps.Data.Feature|undefined;
+    getFeatureById(id: number | string): google.maps.Data.Feature | undefined;
     /**
      * Returns the map on which the features are displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Gets the style for all features in the collection.
      */
-    getStyle(): (google.maps.Data.StylingFunction)|google.maps.Data.StyleOptions
-        |null;
+    getStyle(): (google.maps.Data.StylingFunction) | google.maps.Data.StyleOptions
+      | null;
     /**
      * Loads GeoJSON from a URL, and adds the features to the collection. <p>
      * NOTE: The GeoJSON is fetched using XHR, and may not work cross-domain. If
@@ -446,8 +446,8 @@ declare namespace google.maps {
      * AJAX library, and then call <code>addGeoJson()</code>.
      */
     loadGeoJson(
-        url: string, options?: google.maps.Data.GeoJsonOptions|null,
-        callback?: (a: google.maps.Data.Feature[]) => void): void;
+      url: string, options?: google.maps.Data.GeoJsonOptions | null,
+      callback?: (a: google.maps.Data.Feature[]) => void): void;
     /**
      * Changes the style of a feature. These changes are applied on top of the
      * style specified by <code>setStyle()</code>. Style properties set to
@@ -455,8 +455,8 @@ declare namespace google.maps {
      * <code>setStyle()</code>.
      */
     overrideStyle(
-        feature: google.maps.Data.Feature,
-        style: google.maps.Data.StyleOptions): void;
+      feature: google.maps.Data.Feature,
+      style: google.maps.Data.StyleOptions): void;
     /**
      * Removes a feature from the collection.
      */
@@ -467,7 +467,7 @@ declare namespace google.maps {
      * <code>setStyle()</code>. <p>If no feature is given, all features have
      * their style reverted.</p>
      */
-    revertStyle(feature?: google.maps.Data.Feature|null): void;
+    revertStyle(feature?: google.maps.Data.Feature | null): void;
     /**
      * Sets the position of the drawing controls on the map.
      */
@@ -480,7 +480,7 @@ declare namespace google.maps {
      * <code>"Point"</code>, <code>"LineString"</code> or
      * <code>"Polygon"</code>.
      */
-    setControls(controls: string[]|null): void;
+    setControls(controls: string[] | null): void;
     /**
      * Sets the current drawing mode of the given Data layer. A drawing mode of
      * <code>null</code> means that the user can interact with the map as
@@ -488,12 +488,12 @@ declare namespace google.maps {
      * <code>null</code>, <code>"Point"</code>, <code>"LineString"</code> or
      * <code>"Polygon"</code>.
      */
-    setDrawingMode(drawingMode: string|null): void;
+    setDrawingMode(drawingMode: string | null): void;
     /**
      * Renders the features on the specified map. If map is set to
      * <code>null</code>, the features will be removed from the map.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
     /**
      * Sets the style for all features in the collection. Styles specified on a
      * per-feature basis via <code>overrideStyle()</code> continue to apply.
@@ -501,8 +501,8 @@ declare namespace google.maps {
      * that computes the style for each feature. The function will be called
      * every time a feature&#39;s properties are updated.
      */
-    setStyle(style: (google.maps.Data.StylingFunction)|
-             google.maps.Data.StyleOptions|null): void;
+    setStyle(style: (google.maps.Data.StylingFunction) |
+      google.maps.Data.StyleOptions | null): void;
     /**
      * Exports the features in the collection to a GeoJSON object.
      */
@@ -540,7 +540,7 @@ declare namespace google.maps.Data {
      * <code>"LineString"</code> or <code>"Polygon"</code>.
      * @defaultValue <code>null</code>
      */
-    controls?: string[]|null;
+    controls?: string[] | null;
     /**
      * The current drawing mode of the given Data layer. A drawing mode of
      * <code>null</code> means that the user can interact with the map as
@@ -549,7 +549,7 @@ declare namespace google.maps.Data {
      * <code>"Polygon"</code>.
      * @defaultValue <code>null</code>
      */
-    drawingMode?: string|null;
+    drawingMode?: string | null;
     /**
      * When drawing is enabled and a user draws a Geometry (a Point, Line String
      * or Polygon), this function is called with that Geometry and should return
@@ -558,7 +558,7 @@ declare namespace google.maps.Data {
      * that Geometry instead. Defaults to <code>null</code>.
      */
     featureFactory?:
-        ((a: google.maps.Data.Geometry) => google.maps.Data.Feature)|null;
+    ((a: google.maps.Data.Geometry) => google.maps.Data.Feature) | null;
     /**
      * Map on which to display the features in the collection.
      */
@@ -567,7 +567,7 @@ declare namespace google.maps.Data {
      * Style for all features in the collection. For more details, see the
      * <code><a href='#Data'>setStyle()</a></code> method above.
      */
-    style?: (google.maps.Data.StylingFunction)|google.maps.Data.StyleOptions;
+    style?: (google.maps.Data.StylingFunction) | google.maps.Data.StyleOptions;
   }
 }
 declare namespace google.maps.Data {
@@ -578,7 +578,7 @@ declare namespace google.maps.Data {
     /**
      * A feature has a geometry, an id, and a set of properties.
      */
-    constructor(options?: google.maps.Data.FeatureOptions|null);
+    constructor(options?: google.maps.Data.FeatureOptions | null);
     /**
      * Repeatedly invokes the given function, passing a property value and name
      * on each invocation. The order of iteration through the properties is
@@ -588,11 +588,11 @@ declare namespace google.maps.Data {
     /**
      * Returns the feature&#39;s geometry.
      */
-    getGeometry(): google.maps.Data.Geometry|null;
+    getGeometry(): google.maps.Data.Geometry | null;
     /**
      * Returns the feature ID.
      */
-    getId(): number|string|undefined;
+    getId(): number | string | undefined;
     /**
      * Returns the value of the requested property, or <code>undefined</code> if
      * the property does not exist.
@@ -605,8 +605,8 @@ declare namespace google.maps.Data {
     /**
      * Sets the feature&#39;s geometry.
      */
-    setGeometry(newGeometry: google.maps.Data.Geometry|null|
-                google.maps.LatLng|google.maps.LatLngLiteral): void;
+    setGeometry(newGeometry: google.maps.Data.Geometry | null |
+      google.maps.LatLng | google.maps.LatLngLiteral): void;
     /**
      * Sets the value of the specified property. If <code>newValue</code> is
      * <code>undefined</code> this is equivalent to calling
@@ -630,20 +630,20 @@ declare namespace google.maps.Data {
      * <code>LatLng</code> object or <code>LatLngLiteral</code> is given, this
      * will be converted to a <code>Data.Point</code> geometry.
      */
-    geometry?: google.maps.Data.Geometry|null|google.maps.LatLng|
-        google.maps.LatLngLiteral;
+    geometry?: google.maps.Data.Geometry | null | google.maps.LatLng |
+    google.maps.LatLngLiteral;
     /**
      * Feature ID is optional. If provided, it can be used to look up the
      * feature in a <code>Data</code> object using the
      * <code>getFeatureById()</code> method. Note that a feature&#39;s ID cannot
      * be subsequently changed.
      */
-    id?: number|string;
+    id?: number | string;
     /**
      * The feature properties. This is an arbitrary mapping of property names to
      * values.
      */
-    properties?: object|null;
+    properties?: object | null;
   }
 }
 declare namespace google.maps.Data {
@@ -655,7 +655,7 @@ declare namespace google.maps.Data {
      * The name of the Feature property to use as the feature ID. If not
      * specified, the GeoJSON Feature id will be used.
      */
-    idPropertyName?: string|null;
+    idPropertyName?: string | null;
   }
 }
 declare namespace google.maps.Data {
@@ -690,8 +690,8 @@ declare namespace google.maps.Data {
      * <code>LatLng</code> or <code>LatLngLiteral</code> objects are
      * automatically converted to <code>Data.Point</code> geometry objects.
      */
-    constructor(elements: (google.maps.Data.Geometry|google.maps.LatLng|
-                           google.maps.LatLngLiteral)[]);
+    constructor(elements: (google.maps.Data.Geometry | google.maps.LatLng |
+      google.maps.LatLngLiteral)[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained geometry objects. A new array is
@@ -720,7 +720,7 @@ declare namespace google.maps.Data {
     /**
      * A LineString geometry contains a number of <code>LatLng</code>s.
      */
-    constructor(elements: (google.maps.LatLng|google.maps.LatLngLiteral)[]);
+    constructor(elements: (google.maps.LatLng | google.maps.LatLngLiteral)[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>LatLngs</code>. A new array is
@@ -755,7 +755,7 @@ declare namespace google.maps.Data {
      * <code>LatLng</code> equal to the last <code>LatLng</code>. The LinearRing
      * is closed implicitly.
      */
-    constructor(elements: (google.maps.LatLng|google.maps.LatLngLiteral)[]);
+    constructor(elements: (google.maps.LatLng | google.maps.LatLngLiteral)[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>LatLng</code>s. A new array is
@@ -796,8 +796,8 @@ declare namespace google.maps.Data {
     /**
      * A MultiLineString geometry contains a number of <code>LineString</code>s.
      */
-    constructor(elements: (google.maps.Data.LineString|
-                           (google.maps.LatLng|google.maps.LatLngLiteral)[])[]);
+    constructor(elements: (google.maps.Data.LineString |
+      (google.maps.LatLng | google.maps.LatLngLiteral)[])[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>Data.LineString</code>s. A new
@@ -826,7 +826,7 @@ declare namespace google.maps.Data {
     /**
      * A MultiPoint geometry contains a number of <code>LatLng</code>s.
      */
-    constructor(elements: (google.maps.LatLng|google.maps.LatLngLiteral)[]);
+    constructor(elements: (google.maps.LatLng | google.maps.LatLngLiteral)[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>LatLng</code>s. A new array is
@@ -856,9 +856,9 @@ declare namespace google.maps.Data {
      * A MultiPolygon geometry contains a number of <code>Data.Polygon</code>s.
      */
     constructor(elements:
-                    (google.maps.Data.Polygon|
-                     (google.maps.Data.LinearRing|
-                      (google.maps.LatLng|google.maps.LatLngLiteral)[])[])[]);
+      (google.maps.Data.Polygon |
+        (google.maps.Data.LinearRing |
+          (google.maps.LatLng | google.maps.LatLngLiteral)[])[])[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>Data.Polygon</code>s. A new array
@@ -887,7 +887,7 @@ declare namespace google.maps.Data {
     /**
      * A Point geometry contains a single <code>LatLng</code>.
      */
-    constructor(latLng: google.maps.LatLng|google.maps.LatLngLiteral);
+    constructor(latLng: google.maps.LatLng | google.maps.LatLngLiteral);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns the contained <code>LatLng</code>.
@@ -916,8 +916,8 @@ declare namespace google.maps.Data {
      * href="https://developers.google.com/maps/documentation/javascript/examples/layer-data-polygon">sample
      * polygon with a hole</a>.
      */
-    constructor(elements: (google.maps.Data.LinearRing|
-                           (google.maps.LatLng|google.maps.LatLngLiteral)[])[]);
+    constructor(elements: (google.maps.Data.LinearRing |
+      (google.maps.LatLng | google.maps.LatLngLiteral)[])[]);
     forEachLatLng(callback: (a: google.maps.LatLng) => void): void;
     /**
      * Returns an array of the contained <code>Data.LinearRing</code>s. A new
@@ -1058,7 +1058,7 @@ declare namespace google.maps.Data {
      * it were an <code>Icon</code> with the string as <code>url</code>. Only
      * applies to point geometries.
      */
-    icon?: string|google.maps.Icon|google.maps.Symbol;
+    icon?: string | google.maps.Icon | google.maps.Symbol;
     /**
      * The icons to be rendered along a polyline. Only applies to line
      * geometries.
@@ -1068,7 +1068,7 @@ declare namespace google.maps.Data {
      * Adds a label to the marker. The label can either be a string, or a
      * <code>MarkerLabel</code> object. Only applies to point geometries.
      */
-    label?: string|google.maps.MarkerLabel;
+    label?: string | google.maps.MarkerLabel;
     /**
      * The marker&#39;s opacity between 0.0 and 1.0. Only applies to point
      * geometries.
@@ -1112,7 +1112,7 @@ declare namespace google.maps.Data {
 }
 declare namespace google.maps.Data {
   type StylingFunction = (a: google.maps.Data.Feature) =>
-      google.maps.Data.StyleOptions;
+    google.maps.Data.StyleOptions;
 }
 declare namespace google.maps {
   /**
@@ -1251,20 +1251,20 @@ declare namespace google.maps {
      * Renders directions obtained from the <code><a
      * href="#DirectionsService">DirectionsService</a></code>.
      */
-    constructor(opts?: google.maps.DirectionsRendererOptions|null);
+    constructor(opts?: google.maps.DirectionsRendererOptions | null);
     /**
      * Returns the renderer&#39;s current set of directions.
      */
-    getDirections(): google.maps.DirectionsResult|null;
+    getDirections(): google.maps.DirectionsResult | null;
     /**
      * Returns the map on which the <code>DirectionsResult</code> is rendered.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Returns the panel <code>&lt;div&gt;</code> in which the
      * <code>DirectionsResult</code> is rendered.
      */
-    getPanel(): HTMLElement|null;
+    getPanel(): HTMLElement | null;
     /**
      * Returns the current (zero-based) route index in use by this
      * <code>DirectionsRenderer</code> object.
@@ -1276,22 +1276,22 @@ declare namespace google.maps {
      * manner will display the directions on the renderer&#39;s designated map
      * and panel.
      */
-    setDirections(directions: google.maps.DirectionsResult|null): void;
+    setDirections(directions: google.maps.DirectionsResult | null): void;
     /**
      * This method specifies the map on which directions will be rendered. Pass
      * <code>null</code> to remove the directions from the map.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
     /**
      * Change the options settings of this <code>DirectionsRenderer</code> after
      * initialization.
      */
-    setOptions(options: google.maps.DirectionsRendererOptions|null): void;
+    setOptions(options: google.maps.DirectionsRendererOptions | null): void;
     /**
      * This method renders the directions in a <code>&lt;div&gt;</code>. Pass
      * <code>null</code> to remove the content from the panel.
      */
-    setPanel(panel: HTMLElement|null): void;
+    setPanel(panel: HTMLElement | null): void;
     /**
      * Set the (zero-based) index of the route in the
      * <code>DirectionsResult</code> object to render. By default, the first
@@ -1311,18 +1311,18 @@ declare namespace google.maps {
      * panel, retrieved as a <code>DirectionsResult</code> object from
      * <code>DirectionsService</code>.
      */
-    directions?: google.maps.DirectionsResult|null;
+    directions?: google.maps.DirectionsResult | null;
     /**
      * If <code>true</code>, allows the user to drag and modify the paths of
      * routes rendered by this <code>DirectionsRenderer</code>.
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * This property indicates whether the renderer should provide a
      * user-selectable list of routes shown in the directions panel.
      * @defaultValue <code>false</code>
      */
-    hideRouteList?: boolean|null;
+    hideRouteList?: boolean | null;
     /**
      * The <code>InfoWindow</code> in which to render text information when a
      * marker is clicked. Existing info window content will be overwritten and
@@ -1331,54 +1331,54 @@ declare namespace google.maps {
      * This property will be ignored if <code>suppressInfoWindows</code> is set
      * to <code>true</code>.
      */
-    infoWindow?: google.maps.InfoWindow|null;
+    infoWindow?: google.maps.InfoWindow | null;
     /**
      * Map on which to display the directions.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * Options for the markers. All markers rendered by the
      * <code>DirectionsRenderer</code> will use these options.
      */
-    markerOptions?: google.maps.MarkerOptions|null;
+    markerOptions?: google.maps.MarkerOptions | null;
     /**
      * The <code>&lt;div&gt;</code> in which to display the directions steps.
      */
-    panel?: HTMLElement|null;
+    panel?: HTMLElement | null;
     /**
      * Options for the polylines. All polylines rendered by the
      * <code>DirectionsRenderer</code> will use these options.
      */
-    polylineOptions?: google.maps.PolylineOptions|null;
+    polylineOptions?: google.maps.PolylineOptions | null;
     /**
      * If this option is set to <code>true</code> or the map&#39;s center and
      * zoom were never set, the input map is centered and zoomed to the bounding
      * box of this set of directions.
      * @defaultValue <code>false</code>
      */
-    preserveViewport?: boolean|null;
+    preserveViewport?: boolean | null;
     /**
      * The index of the route within the <code>DirectionsResult</code> object.
      * The default value is 0.
      */
-    routeIndex?: number|null;
+    routeIndex?: number | null;
     /**
      * Suppress the rendering of the <code>BicyclingLayer</code> when bicycling
      * directions are requested.
      */
-    suppressBicyclingLayer?: boolean|null;
+    suppressBicyclingLayer?: boolean | null;
     /**
      * Suppress the rendering of info windows.
      */
-    suppressInfoWindows?: boolean|null;
+    suppressInfoWindows?: boolean | null;
     /**
      * Suppress the rendering of markers.
      */
-    suppressMarkers?: boolean|null;
+    suppressMarkers?: boolean | null;
     /**
      * Suppress the rendering of polylines.
      */
-    suppressPolylines?: boolean|null;
+    suppressPolylines?: boolean | null;
   }
 }
 declare namespace google.maps {
@@ -1406,8 +1406,8 @@ declare namespace google.maps {
      * Location of destination. This can be specified as either a string to be
      * geocoded, or a <code>LatLng</code>, or a <code>Place</code>. Required.
      */
-    destination: string|google.maps.LatLng|google.maps.Place|
-        google.maps.LatLngLiteral;
+    destination: string | google.maps.LatLng | google.maps.Place |
+    google.maps.LatLngLiteral;
     /**
      * Settings that apply only to requests where <code>travelMode</code> is
      * <code>DRIVING</code>. This object will have no effect for other travel
@@ -1426,8 +1426,8 @@ declare namespace google.maps {
      * Location of origin. This can be specified as either a string to be
      * geocoded, or a <code>LatLng</code>, or a <code>Place</code>. Required.
      */
-    origin: string|google.maps.LatLng|google.maps.Place|
-        google.maps.LatLngLiteral;
+    origin: string | google.maps.LatLng | google.maps.Place |
+    google.maps.LatLngLiteral;
     /**
      * Whether or not route alternatives should be provided. Optional.
      */
@@ -1574,11 +1574,11 @@ declare namespace google.maps {
      * Issue a directions search request.
      */
     route(
-        request: google.maps.DirectionsRequest,
-        callback?:
-            (a: google.maps.DirectionsResult|null,
-             b: google.maps.DirectionsStatus) => void):
-        Promise<google.maps.DirectionsResult>;
+      request: google.maps.DirectionsRequest,
+      callback?:
+        (a: google.maps.DirectionsResult | null,
+          b: google.maps.DirectionsStatus) => void):
+      Promise<google.maps.DirectionsResult>;
   }
 }
 declare namespace google.maps {
@@ -1735,7 +1735,7 @@ declare namespace google.maps {
      * Waypoint location. Can be an address string, a <code>LatLng</code>, or a
      * <code>Place</code>. Optional.
      */
-    location?: string|google.maps.LatLng|google.maps.Place;
+    location?: string | google.maps.LatLng | google.maps.Place;
     /**
      * If <code>true</code>, indicates that this waypoint is a stop between the
      * origin and destination. This has the effect of splitting the route into
@@ -1813,8 +1813,8 @@ declare namespace google.maps {
      * or <code>Place</code> objects, to which to calculate distance and time.
      * Required.
      */
-    destinations: (string|google.maps.LatLng|google.maps.LatLngLiteral|
-                   google.maps.Place)[];
+    destinations: (string | google.maps.LatLng | google.maps.LatLngLiteral |
+      google.maps.Place)[];
     /**
      * Settings that apply only to requests where <code>travelMode</code> is
      * <code>DRIVING</code>. This object will have no effect for other travel
@@ -1826,8 +1826,8 @@ declare namespace google.maps {
      * <code>Place</code> objects, from which to calculate distance and time.
      * Required.
      */
-    origins: (string|google.maps.LatLng|google.maps.LatLngLiteral|
-              google.maps.Place)[];
+    origins: (string | google.maps.LatLng | google.maps.LatLngLiteral |
+      google.maps.Place)[];
     /**
      * Region code used as a bias for geocoding requests. Optional.
      */
@@ -1929,11 +1929,11 @@ declare namespace google.maps {
      * Issues a distance matrix request.
      */
     getDistanceMatrix(
-        request: google.maps.DistanceMatrixRequest,
-        callback?:
-            (a: google.maps.DistanceMatrixResponse|null,
-             b: google.maps.DistanceMatrixStatus) => void):
-        Promise<google.maps.DistanceMatrixResponse>;
+      request: google.maps.DistanceMatrixRequest,
+      callback?:
+        (a: google.maps.DistanceMatrixResponse | null,
+          b: google.maps.DistanceMatrixStatus) => void):
+      Promise<google.maps.DistanceMatrixResponse>;
   }
 }
 declare namespace google.maps {
@@ -2028,7 +2028,7 @@ declare namespace google.maps {
     /**
      * The location of this elevation result.
      */
-    location: google.maps.LatLng|null;
+    location: google.maps.LatLng | null;
     /**
      * The distance, in meters, between sample points from which the elevation
      * was interpolated. This property will be missing if the resolution is not
@@ -2051,20 +2051,20 @@ declare namespace google.maps {
      * returned as distance-based samples along that path.
      */
     getElevationAlongPath(
-        request: google.maps.PathElevationRequest,
-        callback?:
-            (a: google.maps.ElevationResult[]|null,
-             b: google.maps.ElevationStatus) => void):
-        Promise<google.maps.PathElevationResponse>;
+      request: google.maps.PathElevationRequest,
+      callback?:
+        (a: google.maps.ElevationResult[] | null,
+          b: google.maps.ElevationStatus) => void):
+      Promise<google.maps.PathElevationResponse>;
     /**
      * Makes an elevation request for a list of discrete locations.
      */
     getElevationForLocations(
-        request: google.maps.LocationElevationRequest,
-        callback?:
-            (a: google.maps.ElevationResult[]|null,
-             b: google.maps.ElevationStatus) => void):
-        Promise<google.maps.LocationElevationResponse>;
+      request: google.maps.LocationElevationRequest,
+      callback?:
+        (a: google.maps.ElevationResult[] | null,
+          b: google.maps.ElevationStatus) => void):
+      Promise<google.maps.LocationElevationResponse>;
   }
 }
 declare namespace google.maps {
@@ -2119,7 +2119,7 @@ declare namespace google.maps {
      * Position id. Used to specify the position of the control on the map. The
      * default position is <code>RIGHT_TOP</code>.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -2131,10 +2131,10 @@ declare namespace google.maps {
      * Geocode a request.
      */
     geocode(
-        request: google.maps.GeocoderRequest,
-        callback?:
-            ((a: google.maps.GeocoderResult[]|null,
-              b: google.maps.GeocoderStatus) => void)|
+      request: google.maps.GeocoderRequest,
+      callback?:
+        ((a: google.maps.GeocoderResult[] | null,
+          b: google.maps.GeocoderStatus) => void) |
         null): Promise<google.maps.GeocoderResponse>;
   }
 }
@@ -2256,11 +2256,11 @@ declare namespace google.maps {
      * Address to geocode. One, and only one, of <code>address</code>,
      * <code>location</code> and <code>placeId</code> must be supplied.
      */
-    address?: string|null;
+    address?: string | null;
     /**
      * <code>LatLngBounds</code> within which to search. Optional.
      */
-    bounds?: google.maps.LatLngBounds|null|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | null | google.maps.LatLngBoundsLiteral;
     /**
      * Components are used to restrict results to a specific area. A filter
      * consists of one or more of: <code>route</code>, <code>locality</code>,
@@ -2269,7 +2269,7 @@ declare namespace google.maps {
      * returned. Filter values support the same methods of spelling correction
      * and partial matching as other geocoding requests. Optional.
      */
-    componentRestrictions?: google.maps.GeocoderComponentRestrictions|null;
+    componentRestrictions?: google.maps.GeocoderComponentRestrictions | null;
     /**
      * <code>LatLng</code> (or <code>LatLngLiteral</code>) for which to search.
      * The geocoder performs a reverse geocode. See <a
@@ -2278,7 +2278,7 @@ declare namespace google.maps {
      * <code>address</code>, <code>location</code> and <code>placeId</code> must
      * be supplied.
      */
-    location?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    location?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * The place ID associated with the location. Place IDs uniquely identify a
      * place in the Google Places database and on Google Maps. Learn more about
@@ -2291,14 +2291,14 @@ declare namespace google.maps {
      * <code>address</code>, <code>location</code> and <code>placeId</code> must
      * be supplied.
      */
-    placeId?: string|null;
+    placeId?: string | null;
     /**
      * Country code used to bias the search, specified as a two-character
      * (non-numeric) Unicode region subtag / CLDR identifier. Optional. See <a
      * href="http://developers.google.com/maps/coverage">Google Maps Platform
      * Coverage Details</a> for supported regions.
      */
-    region?: string|null;
+    region?: string | null;
   }
 }
 declare namespace google.maps {
@@ -2415,17 +2415,17 @@ declare namespace google.maps {
      * A rectangular image overlay on the map.
      */
     constructor(
-        url: string,
-        bounds: google.maps.LatLngBounds|null|google.maps.LatLngBoundsLiteral,
-        opts?: google.maps.GroundOverlayOptions|null);
+      url: string,
+      bounds: google.maps.LatLngBounds | null | google.maps.LatLngBoundsLiteral,
+      opts?: google.maps.GroundOverlayOptions | null);
     /**
      * Gets the <code>LatLngBounds</code> of this overlay.
      */
-    getBounds(): google.maps.LatLngBounds|null;
+    getBounds(): google.maps.LatLngBounds | null;
     /**
      * Returns the map on which this ground overlay is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Returns the opacity of this ground overlay.
      */
@@ -2438,7 +2438,7 @@ declare namespace google.maps {
      * Renders the ground overlay on the specified map. If map is set to
      * <code>null</code>, the overlay is removed.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
     /**
      * Sets the opacity of this ground overlay.
      */
@@ -2454,17 +2454,17 @@ declare namespace google.maps {
     /**
      * If <code>true</code>, the ground overlay can receive mouse events.
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * The map on which to display the overlay.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The opacity of the overlay, expressed as a number between 0 and 1.
      * Optional.
      * @defaultValue <code>1.0</code>
      */
-    opacity?: number|null;
+    opacity?: number | null;
   }
 }
 declare namespace google.maps {
@@ -2477,29 +2477,29 @@ declare namespace google.maps {
      * location of the marker on the map. By default, the anchor is located
      * along the center point of the bottom of the image.
      */
-    anchor?: google.maps.Point|null;
+    anchor?: google.maps.Point | null;
     /**
      * The origin of the label relative to the top-left corner of the icon
      * image, if a label is supplied by the marker. By default, the origin is
      * located in the center point of the image.
      */
-    labelOrigin?: google.maps.Point|null;
+    labelOrigin?: google.maps.Point | null;
     /**
      * The position of the image within a sprite, if any. By default, the origin
      * is located at the top left corner of the image <code>(0, 0)</code>.
      */
-    origin?: google.maps.Point|null;
+    origin?: google.maps.Point | null;
     /**
      * The size of the entire image after scaling, if any. Use this property to
      * stretch/shrink an image or a sprite.
      */
-    scaledSize?: google.maps.Size|null;
+    scaledSize?: google.maps.Size | null;
     /**
      * The display size of the sprite or image. When using sprites, you must
      * specify the sprite size. If the size is not provided, it will be set when
      * the image loads.
      */
-    size?: google.maps.Size|null;
+    size?: google.maps.Size | null;
     /**
      * The URL of the image or sprite sheet.
      */
@@ -2523,7 +2523,7 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/places/web-service/place-id">place
      * IDs</a> in the Places API developer guide.
      */
-    placeId: string|null;
+    placeId: string | null;
   }
 }
 declare namespace google.maps {
@@ -2545,7 +2545,7 @@ declare namespace google.maps {
     /**
      * The icon to render on the line.
      */
-    icon?: google.maps.Symbol|null;
+    icon?: google.maps.Symbol | null;
     /**
      * The distance from the start of the line at which an icon is to be
      * rendered. This distance may be expressed as a percentage of line&#39;s
@@ -2571,34 +2571,34 @@ declare namespace google.maps {
    * image tiles.
    */
   class ImageMapType extends google.maps.MVCObject implements
-      google.maps.MapType {
+    google.maps.MapType {
     /**
      * This class implements the MapType interface and is provided for rendering
      * image tiles.
      */
-    constructor(opts: google.maps.ImageMapTypeOptions|null);
-    alt: string|null;
+    constructor(opts: google.maps.ImageMapTypeOptions | null);
+    alt: string | null;
     /**
      * Returns the opacity level (<code>0</code> (transparent) to
      * <code>1.0</code>) of the <code>ImageMapType</code> tiles.
      */
     getOpacity(): number;
     getTile(
-        tileCoord: google.maps.Point|null, zoom: number,
-        ownerDocument: Document|null): Element|null;
+      tileCoord: google.maps.Point | null, zoom: number,
+      ownerDocument: Document | null): Element | null;
     maxZoom: number;
     minZoom: number;
-    name: string|null;
-    projection: google.maps.Projection|null;
+    name: string | null;
+    projection: google.maps.Projection | null;
     radius: number;
-    releaseTile(tileDiv: Element|null): void;
+    releaseTile(tileDiv: Element | null): void;
     /**
      * Sets the opacity level (<code>0</code> (transparent) to <code>1.0</code>)
      * of the <code>ImageMapType</code> tiles.
      * @param opacity The new opacity.
      */
     setOpacity(opacity: number): void;
-    tileSize: google.maps.Size|null;
+    tileSize: google.maps.Size | null;
   }
 }
 declare namespace google.maps {
@@ -2610,34 +2610,34 @@ declare namespace google.maps {
      * Alt text to display when this MapType&#39;s button is hovered over in the
      * MapTypeControl.
      */
-    alt?: string|null;
+    alt?: string | null;
     /**
      * Returns a string (URL) for given tile coordinate (x, y) and zoom level.
      */
-    getTileUrl?: ((a: google.maps.Point, b: number) => string | null)|null;
+    getTileUrl?: ((a: google.maps.Point, b: number) => string | null) | null;
     /**
      * The maximum zoom level for the map when displaying this MapType.
      */
-    maxZoom?: number|null;
+    maxZoom?: number | null;
     /**
      * The minimum zoom level for the map when displaying this MapType.
      * Optional.
      */
-    minZoom?: number|null;
+    minZoom?: number | null;
     /**
      * Name to display in the MapTypeControl.
      */
-    name?: string|null;
+    name?: string | null;
     /**
      * The opacity to apply to the tiles. The opacity should be specified as a
      * float value between 0 and 1.0, where 0 is fully transparent and 1 is
      * fully opaque.
      */
-    opacity?: number|null;
+    opacity?: number | null;
     /**
      * The tile size.
      */
-    tileSize?: google.maps.Size|null;
+    tileSize?: google.maps.Size | null;
   }
 }
 declare namespace google.maps {
@@ -2648,7 +2648,7 @@ declare namespace google.maps {
     /**
      * An overlay that looks like a bubble and is often connected to a marker.
      */
-    constructor(opts?: google.maps.InfoWindowOptions|null);
+    constructor(opts?: google.maps.InfoWindowOptions | null);
     /**
      * Closes this InfoWindow by removing it from the DOM structure.
      */
@@ -2660,8 +2660,8 @@ declare namespace google.maps {
      * <code>InfoWindow</code> that is not visible cannot be focused.
      */
     focus(): void;
-    getContent(): string|Element|null|Text|undefined;
-    getPosition(): google.maps.LatLng|null|undefined;
+    getContent(): string | Element | null | Text | undefined;
+    getPosition(): google.maps.LatLng | null | undefined;
     getZIndex(): number;
     /**
      * Opens this InfoWindow on the given map. Optionally, an InfoWindow can be
@@ -2683,13 +2683,13 @@ declare namespace google.maps {
      *     map or panorama as the anchor <strong>(when available)</strong>.
      */
     open(
-        options?: google.maps.InfoWindowOpenOptions|null|google.maps.Map|
+      options?: google.maps.InfoWindowOpenOptions | null | google.maps.Map |
         google.maps.StreetViewPanorama,
-        anchor?: google.maps.MVCObject|null): void;
-    setContent(content?: string|Element|null|Text): void;
-    setOptions(options?: google.maps.InfoWindowOptions|null): void;
-    setPosition(position?: google.maps.LatLng|null|
-                google.maps.LatLngLiteral): void;
+      anchor?: google.maps.MVCObject | null): void;
+    setContent(content?: string | Element | null | Text): void;
+    setOptions(options?: google.maps.InfoWindowOptions | null): void;
+    setPosition(position?: google.maps.LatLng | null |
+      google.maps.LatLngLiteral): void;
     setZIndex(zIndex: number): void;
   }
 }
@@ -2704,11 +2704,11 @@ declare namespace google.maps {
      * anchor. The InfoWindow will be rendered on the same map or panorama as
      * the anchor <strong>(when available)</strong>.
      */
-    anchor?: google.maps.MVCObject|null;
+    anchor?: google.maps.MVCObject | null;
     /**
      * The map or panorama on which to render this InfoWindow.
      */
-    map?: google.maps.Map|null|google.maps.StreetViewPanorama;
+    map?: google.maps.Map | null | google.maps.StreetViewPanorama;
     /**
      * Whether or not focus should be moved inside the InfoWindow when it is
      * opened. When this property is unset or when it is set to
@@ -2717,7 +2717,7 @@ declare namespace google.maps {
      * explicitly set this property to fit your needs as the heuristic is
      * subject to change and may not work well for all use cases.
      */
-    shouldFocus?: boolean|null;
+    shouldFocus?: boolean | null;
   }
 }
 declare namespace google.maps {
@@ -2729,20 +2729,20 @@ declare namespace google.maps {
     /**
      * AriaLabel to assign to the InfoWindow.
      */
-    ariaLabel?: string|null;
+    ariaLabel?: string | null;
     /**
      * Content to display in the InfoWindow. This can be an HTML element, a
      * plain-text string, or a string containing HTML. The InfoWindow will be
      * sized according to the content. To set an explicit size for the content,
      * set content to be a HTML element with that size.
      */
-    content?: string|null|Element|Text;
+    content?: string | null | Element | Text;
     /**
      * Disable panning the map to make the InfoWindow fully visible when it
      * opens.
      * @defaultValue <code>false</code>
      */
-    disableAutoPan?: boolean|null;
+    disableAutoPan?: boolean | null;
     /**
      * Maximum width of the InfoWindow, regardless of content&#39;s width. This
      * value is only considered if it is set before a call to
@@ -2750,7 +2750,7 @@ declare namespace google.maps {
      * call <code>close()</code>, <code>setOptions()</code>, and then
      * <code>open()</code>.
      */
-    maxWidth?: number|null;
+    maxWidth?: number | null;
     /**
      * Minimum width of the InfoWindow, regardless of the content&#39;s width.
      * When using this property, it is strongly recommended to set the
@@ -2760,19 +2760,19 @@ declare namespace google.maps {
      * call <code>close()</code>, <code>setOptions()</code>, and then
      * <code>open()</code>.
      */
-    minWidth?: number|null;
+    minWidth?: number | null;
     /**
      * The offset, in pixels, of the tip of the info window from the point on
      * the map at whose geographical coordinates the info window is anchored. If
      * an InfoWindow is opened with an anchor, the <code>pixelOffset</code> will
      * be calculated from the anchor&#39;s <code>anchorPoint</code> property.
      */
-    pixelOffset?: google.maps.Size|null;
+    pixelOffset?: google.maps.Size | null;
     /**
      * The LatLng at which to display this InfoWindow. If the InfoWindow is
      * opened with an anchor, the anchor&#39;s position will be used instead.
      */
-    position?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    position?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * All InfoWindows are displayed on the map in order of their zIndex, with
      * higher values displaying in front of InfoWindows with lower values. By
@@ -2780,7 +2780,7 @@ declare namespace google.maps {
      * InfoWindows of lower latitudes appearing in front of InfoWindows at
      * higher latitudes. InfoWindows are always displayed in front of markers.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -2813,7 +2813,7 @@ declare namespace google.maps {
      * The feature&#39;s <code>&lt;atom:author&gt;</code>, extracted from the
      * layer markup (if specified).
      */
-    author: google.maps.KmlAuthor|null;
+    author: google.maps.KmlAuthor | null;
     /**
      * The feature&#39;s <code>&lt;description&gt;</code>, extracted from the
      * layer markup.
@@ -2856,20 +2856,20 @@ declare namespace google.maps {
      * clicked.
      * @param opts Options for this layer.
      */
-    constructor(opts?: google.maps.KmlLayerOptions|null);
+    constructor(opts?: google.maps.KmlLayerOptions | null);
     /**
      * Get the default viewport for the layer being displayed.
      */
-    getDefaultViewport(): google.maps.LatLngBounds|null;
+    getDefaultViewport(): google.maps.LatLngBounds | null;
     /**
      * Get the map on which the KML Layer is being rendered.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Get the metadata associated with this layer, as specified in the layer
      * markup.
      */
-    getMetadata(): google.maps.KmlLayerMetadata|null;
+    getMetadata(): google.maps.KmlLayerMetadata | null;
     /**
      * Get the status of the layer, set once the requested document has loaded.
      */
@@ -2886,8 +2886,8 @@ declare namespace google.maps {
      * Renders the KML Layer on the specified map. If map is set to
      * <code>null</code>, the layer is removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.KmlLayerOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.KmlLayerOptions | null): void;
     /**
      * Sets the URL of the KML file to display.
      */
@@ -2908,7 +2908,7 @@ declare namespace google.maps {
      * The layer&#39;s <code>&lt;atom:author&gt;</code>, extracted from the
      * layer markup.
      */
-    author: google.maps.KmlAuthor|null;
+    author: google.maps.KmlAuthor | null;
     /**
      * The layer&#39;s <code>&lt;description&gt;</code>, extracted from the
      * layer markup.
@@ -2940,35 +2940,35 @@ declare namespace google.maps {
      * If <code>true</code>, the layer receives mouse events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * The map on which to display the layer.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * If this option is set to <code>true</code> or if the map&#39;s center and
      * zoom were never set, the input map is centered and zoomed to the bounding
      * box of the contents of the layer.
      * @defaultValue <code>false</code>
      */
-    preserveViewport?: boolean|null;
+    preserveViewport?: boolean | null;
     /**
      * Whether to render the screen overlays.
      * @defaultValue <code>true</code>
      */
-    screenOverlays?: boolean|null;
+    screenOverlays?: boolean | null;
     /**
      * Suppress the rendering of info windows when layer features are clicked.
      */
-    suppressInfoWindows?: boolean|null;
+    suppressInfoWindows?: boolean | null;
     /**
      * The URL of the KML document to display.
      */
-    url?: string|null;
+    url?: string | null;
     /**
      * The z-index of the layer.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -3026,15 +3026,15 @@ declare namespace google.maps {
      * A <code>KmlFeatureData</code> object, containing information about the
      * clicked feature.
      */
-    featureData: google.maps.KmlFeatureData|null;
+    featureData: google.maps.KmlFeatureData | null;
     /**
      * The position at which to anchor an infowindow on the clicked feature.
      */
-    latLng: google.maps.LatLng|null;
+    latLng: google.maps.LatLng | null;
     /**
      * The offset to apply to an infowindow anchored on the clicked feature.
      */
-    pixelOffset: google.maps.Size|null;
+    pixelOffset: google.maps.Size | null;
   }
 }
 declare namespace google.maps {
@@ -3101,13 +3101,13 @@ declare namespace google.maps {
      * google.maps.LatLng(new google.maps.LatLng(-34, 151), null, true); </pre>
      */
     constructor(
-        latOrLatLngOrLatLngLiteral: number|google.maps.LatLngLiteral|
+      latOrLatLngOrLatLngLiteral: number | google.maps.LatLngLiteral |
         google.maps.LatLng,
-        lngOrNoClampNoWrap?: number|boolean|null, noClampNoWrap?: boolean);
+      lngOrNoClampNoWrap?: number | boolean | null, noClampNoWrap?: boolean);
     /**
      * Comparison function.
      */
-    equals(other: google.maps.LatLng|null): boolean;
+    equals(other: google.maps.LatLng | null): boolean;
     /**
      * Returns the latitude in degrees.
      */
@@ -3148,7 +3148,7 @@ declare namespace google.maps {
    * denote heights underneath the ground surface.</li> </ul>
    */
   class LatLngAltitude implements google.maps.LatLngAltitudeLiteral,
-                                  google.maps.LatLngLiteral {
+    google.maps.LatLngLiteral {
     /**
      * Returns the altitude.
      */
@@ -3157,7 +3157,7 @@ declare namespace google.maps {
      * Comparison function.
      * @param other Another LatLngAltitude object.
      */
-    equals(other: google.maps.LatLngAltitude|null): boolean;
+    equals(other: google.maps.LatLngAltitude | null): boolean;
     /**
      * Returns the latitude.
      */
@@ -3210,24 +3210,24 @@ declare namespace google.maps {
      * crosses the 180 degrees longitudinal meridian.
      */
     constructor(
-        swOrLatLngBounds?: google.maps.LatLng|null|
-        google.maps.LatLngLiteral|google.maps.LatLngBounds,
-        ne?: google.maps.LatLng|null|google.maps.LatLngLiteral);
+      swOrLatLngBounds?: google.maps.LatLng | null |
+        google.maps.LatLngLiteral | google.maps.LatLngBounds,
+      ne?: google.maps.LatLng | null | google.maps.LatLngLiteral);
     /**
      * Returns <code>true</code> if the given lat/lng is in this bounds.
      */
-    contains(latLng: google.maps.LatLng|google.maps.LatLngLiteral): boolean;
+    contains(latLng: google.maps.LatLng | google.maps.LatLngLiteral): boolean;
     /**
      * Returns <code>true</code> if this bounds approximately equals the given
      * bounds.
      */
-    equals(other: google.maps.LatLngBounds|null|
-           google.maps.LatLngBoundsLiteral): boolean;
+    equals(other: google.maps.LatLngBounds | null |
+      google.maps.LatLngBoundsLiteral): boolean;
     /**
      * Extends this bounds to contain the given point.
      */
-    extend(point: google.maps.LatLng|
-           google.maps.LatLngLiteral): google.maps.LatLngBounds;
+    extend(point: google.maps.LatLng |
+      google.maps.LatLngLiteral): google.maps.LatLngBounds;
     /**
      * Computes the center of this LatLngBounds
      */
@@ -3244,8 +3244,8 @@ declare namespace google.maps {
      * Returns <code>true</code> if this bounds shares any points with the other
      * bounds.
      */
-    intersects(other: google.maps.LatLngBounds|
-               google.maps.LatLngBoundsLiteral): boolean;
+    intersects(other: google.maps.LatLngBounds |
+      google.maps.LatLngBoundsLiteral): boolean;
     /**
      * Returns if the bounds are empty.
      */
@@ -3273,8 +3273,8 @@ declare namespace google.maps {
     /**
      * Extends this bounds to contain the union of this and the given bounds.
      */
-    union(other: google.maps.LatLngBounds|
-          google.maps.LatLngBoundsLiteral): google.maps.LatLngBounds;
+    union(other: google.maps.LatLngBounds |
+      google.maps.LatLngBoundsLiteral): google.maps.LatLngBounds;
   }
 }
 declare namespace google.maps {
@@ -3350,7 +3350,7 @@ declare namespace google.maps {
     /**
      * The discrete locations for which to retrieve elevations.
      */
-    locations?: (google.maps.LatLng|google.maps.LatLngLiteral)[]|null;
+    locations?: (google.maps.LatLng | google.maps.LatLngLiteral)[] | null;
   }
 }
 declare namespace google.maps {
@@ -3369,7 +3369,7 @@ declare namespace google.maps {
 }
 declare namespace google.maps {
   class MVCArray<T = any> extends google.maps.MVCObject {
-    constructor(array?: T[]|null);
+    constructor(array?: T[] | null);
     /**
      * Removes all elements from the array.
      */
@@ -3431,13 +3431,13 @@ declare namespace google.maps {
      * <code>google.maps.event.removeListener</code>.
      */
     addListener(eventName: string, handler: Function):
-        google.maps.MapsEventListener;
+      google.maps.MapsEventListener;
     /**
      * Binds a View to a Model.
      */
     bindTo(
-        key: string, target: google.maps.MVCObject, targetKey?: string|null,
-        noNotify?: boolean): void;
+      key: string, target: google.maps.MVCObject, targetKey?: string | null,
+      noNotify?: boolean): void;
     /**
      * Gets a value.
      */
@@ -3455,7 +3455,7 @@ declare namespace google.maps {
     /**
      * Sets a collection of key-value pairs.
      */
-    setValues(values?: object|null): void;
+    setValues(values?: object | null): void;
     /**
      * Removes a binding. Unbinding will set the unbound property to the current
      * value. The object will not be notified, as the value has not changed.
@@ -3497,8 +3497,8 @@ declare namespace google.maps {
      *     fitBounds idempotent on the result of getBounds.
      */
     fitBounds(
-        bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,
-        padding?: number|google.maps.Padding): void;
+      bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,
+      padding?: number | google.maps.Padding): void;
     /**
      * Returns the lat/lng bounds of the current viewport. If more than one copy
      * of the world is visible, the bounds range in longitude from -180 to 180
@@ -3510,7 +3510,7 @@ declare namespace google.maps {
      * google.maps.MapCanvasProjection.getVisibleRegion} for getting the exact
      * visible region of the map&#39;s viewport.
      */
-    getBounds(): google.maps.LatLngBounds|undefined;
+    getBounds(): google.maps.LatLngBounds | undefined;
     /**
      * Returns the position displayed at the center of the map. Note that
      * this {@link google.maps.LatLng} object is <em>not</em> wrapped. See
@@ -3518,28 +3518,28 @@ declare namespace google.maps {
      * center or bounds have not been set then the result is
      * <code>undefined</code>.
      */
-    getCenter(): google.maps.LatLng|undefined;
+    getCenter(): google.maps.LatLng | undefined;
     /**
      * Returns the clickability of the map icons. A map icon represents a point
      * of interest, also known as a POI. If the returned value is
      * <code>true</code>, then the icons are clickable on the map.
      */
-    getClickableIcons(): boolean|undefined;
+    getClickableIcons(): boolean | undefined;
     getDiv(): HTMLElement;
     /**
      * Returns the compass heading of the map. The heading value is measured in
      * degrees (clockwise) from cardinal direction North. If the map is not yet
      * initialized then the result is <code>undefined</code>.
      */
-    getHeading(): number|undefined;
-    getMapTypeId(): string|undefined;
+    getHeading(): number | undefined;
+    getMapTypeId(): string | undefined;
     /**
      * Returns the current <code>Projection</code>. If the map is not yet
      * initialized then the result is <code>undefined</code>. Listen to the
      * <code>projection_changed</code> event and check its value to ensure it is
      * not <code>undefined</code>.
      */
-    getProjection(): google.maps.Projection|undefined;
+    getProjection(): google.maps.Projection | undefined;
     /**
      * Returns the current RenderingType of the map.
      */
@@ -3559,12 +3559,12 @@ declare namespace google.maps {
      * 45&deg; imagery. This method does not return the value set by
      * <code>setTilt</code>. See <code>setTilt</code> for details.
      */
-    getTilt(): number|undefined;
+    getTilt(): number | undefined;
     /**
      * Returns the zoom of the map. If the zoom has not been set then the result
      * is <code>undefined</code>.
      */
-    getZoom(): number|undefined;
+    getZoom(): number | undefined;
     /**
      * A registry of <code>MapType</code> instances by string ID.
      */
@@ -3580,7 +3580,7 @@ declare namespace google.maps {
      * the <code>overlayMapTypes</code> array (overlays with higher index values
      * are displayed in front of overlays with lower index values).
      */
-    overlayMapTypes: google.maps.MVCArray<google.maps.MapType|null>;
+    overlayMapTypes: google.maps.MVCArray<google.maps.MapType | null>;
     /**
      * Changes the center of the map by the given distance in pixels. If the
      * distance is less than both the width and height of the map, the
@@ -3597,7 +3597,7 @@ declare namespace google.maps {
      * will be smoothly animated.
      * @param latLng The new center latitude/longitude of the map.
      */
-    panTo(latLng: google.maps.LatLng|google.maps.LatLngLiteral): void;
+    panTo(latLng: google.maps.LatLng | google.maps.LatLngLiteral): void;
     /**
      * Pans the map by the minimum amount necessary to contain the given
      * <code>LatLngBounds</code>. It makes no guarantee where on the map the
@@ -3610,9 +3610,9 @@ declare namespace google.maps {
      *     padding on all 4 sides. The default value is 0.
      */
     panToBounds(
-        latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral,
-        padding?: number|google.maps.Padding): void;
-    setCenter(latlng: google.maps.LatLng|google.maps.LatLngLiteral): void;
+      latLngBounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral,
+      padding?: number | google.maps.Padding): void;
+    setCenter(latlng: google.maps.LatLng | google.maps.LatLngLiteral): void;
     /**
      * Controls whether the map icons are clickable or not. A map icon
      * represents a point of interest, also known as a POI. To disable the
@@ -3627,7 +3627,7 @@ declare namespace google.maps {
      */
     setHeading(heading: number): void;
     setMapTypeId(mapTypeId: string): void;
-    setOptions(options: google.maps.MapOptions|null): void;
+    setOptions(options: google.maps.MapOptions | null): void;
     /**
      * Binds a <code>StreetViewPanorama</code> to the map. This panorama
      * overrides the default <code>StreetViewPanorama</code>, allowing the map
@@ -3635,7 +3635,7 @@ declare namespace google.maps {
      * to <code>null</code> binds the default embedded panorama back to the map.
      * @param panorama The panorama to bind to the map.
      */
-    setStreetView(panorama: google.maps.StreetViewPanorama|null): void;
+    setStreetView(panorama: google.maps.StreetViewPanorama | null): void;
     /**
      * For vector maps, sets the angle of incidence of the map. The allowed
      * values are restricted depending on the zoom level of the map. For raster
@@ -3675,34 +3675,34 @@ declare namespace google.maps {
      * map&#39;s container.
      */
     fromContainerPixelToLatLng(
-        pixel: google.maps.Point|null,
-        noClampNoWrap?: boolean): google.maps.LatLng|null;
+      pixel: google.maps.Point | null,
+      noClampNoWrap?: boolean): google.maps.LatLng | null;
     /**
      * Computes the geographical coordinates from pixel coordinates in the div
      * that holds the draggable map.
      */
     fromDivPixelToLatLng(
-        pixel: google.maps.Point|null,
-        noClampNoWrap?: boolean): google.maps.LatLng|null;
+      pixel: google.maps.Point | null,
+      noClampNoWrap?: boolean): google.maps.LatLng | null;
     /**
      * Computes the pixel coordinates of the given geographical location in the
      * map&#39;s container element.
      */
-    fromLatLngToContainerPixel(latLng: google.maps.LatLng|
-                               google.maps.LatLngLiteral): google.maps.Point
-        |null;
+    fromLatLngToContainerPixel(latLng: google.maps.LatLng |
+      google.maps.LatLngLiteral): google.maps.Point
+      | null;
     /**
      * Computes the pixel coordinates of the given geographical location in the
      * DOM element that holds the draggable map.
      */
-    fromLatLngToDivPixel(latLng: google.maps.LatLng|null|
-                         google.maps.LatLngLiteral): google.maps.Point|null;
+    fromLatLngToDivPixel(latLng: google.maps.LatLng | null |
+      google.maps.LatLngLiteral): google.maps.Point | null;
     /**
      * The visible region of the map. Returns <code>null</code> if the map has
      * no size. Returns <code>null</code> if the OverlayView is on a
      * StreetViewPanorama.
      */
-    getVisibleRegion(): google.maps.VisibleRegion|null;
+    getVisibleRegion(): google.maps.VisibleRegion | null;
     /**
      * The width of the world in pixels in the current zoom level. For
      * projections with a heading angle of either 90 or 270 degrees, this
@@ -3728,15 +3728,19 @@ declare namespace google.maps {
      * google.maps.MapMouseEvent} &quot;click&quot; may have a
      * <code>domEvent</code> of type <code>KeyboardEvent</code>).
      */
-    domEvent: MouseEvent|TouchEvent|PointerEvent|KeyboardEvent|Event;
+    domEvent: MouseEvent | TouchEvent | PointerEvent | KeyboardEvent | Event;
     /**
      * The latitude/longitude that was below the cursor when the event occurred.
      */
-    latLng: google.maps.LatLng|null;
+    latLng: google.maps.LatLng | null;
     /**
      * Prevents this event from propagating further.
      */
     stop(): void;
+
+    edge?: number;
+
+    vertex?: number;
   }
 }
 declare namespace google.maps {
@@ -3749,17 +3753,17 @@ declare namespace google.maps {
      * when tiles have not yet loaded as the user pans. This option can only be
      * set when the map is initialized.
      */
-    backgroundColor?: string|null;
+    backgroundColor?: string | null;
     /**
      * The initial Map center.
      */
-    center?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    center?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * When <code>false</code>, map icons are not clickable. A map icon
      * represents a point of interest, also known as a POI.
      * @defaultValue <code>true</code>
      */
-    clickableIcons?: boolean|null;
+    clickableIcons?: boolean | null;
     /**
      * Size in pixels of the controls appearing on the map. This value must be
      * supplied directly when creating the Map, updating this value later may
@@ -3767,7 +3771,7 @@ declare namespace google.maps {
      * controls made by the Maps API itself. Does not scale developer created
      * custom controls.
      */
-    controlSize?: number|null;
+    controlSize?: number | null;
     /**
      * Enables/disables all default UI buttons. May be overridden individually.
      * Does not disable the keyboard controls, which are separately controlled
@@ -3775,14 +3779,14 @@ declare namespace google.maps {
      * disable gesture controls, which are separately controlled by the {@link
      * google.maps.MapOptions.gestureHandling} option.
      */
-    disableDefaultUI?: boolean|null;
+    disableDefaultUI?: boolean | null;
     /**
      * Enables/disables zoom and center on double click. Enabled by default.
      * <p><strong>Note</strong>: This property is <strong>not
      * recommended</strong>. To disable zooming on double click, you can use the
      * <code>gestureHandling</code> property, and set it to <code>"none"</code>.
      */
-    disableDoubleClickZoom?: boolean|null;
+    disableDoubleClickZoom?: boolean | null;
     /**
      * If <code>false</code>, prevents the map from being dragged. Dragging is
      * enabled by default.
@@ -3790,7 +3794,7 @@ declare namespace google.maps {
      *     use the <code>gestureHandling</code> property, and set it to
      *     <code>"none"</code>.
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * The name or url of the cursor to display when mousing over a draggable
      * map. This property uses the css <code>cursor</code> attribute to change
@@ -3800,7 +3804,7 @@ declare namespace google.maps {
      * href="http://www.example.com/icon.png">http://www.example.com/icon.png</a>),
      * auto;'</code>.
      */
-    draggableCursor?: string|null;
+    draggableCursor?: string | null;
     /**
      * The name or url of the cursor to display when the map is being dragged.
      * This property uses the css <code>cursor</code> attribute to change the
@@ -3809,15 +3813,15 @@ declare namespace google.maps {
      * href="http://www.example.com/icon.png">http://www.example.com/icon.png</a>),
      * auto;'</code>.
      */
-    draggingCursor?: string|null;
+    draggingCursor?: string | null;
     /**
      * The enabled/disabled state of the Fullscreen control.
      */
-    fullscreenControl?: boolean|null;
+    fullscreenControl?: boolean | null;
     /**
      * The display options for the Fullscreen control.
      */
-    fullscreenControlOptions?: google.maps.FullscreenControlOptions|null;
+    fullscreenControlOptions?: google.maps.FullscreenControlOptions | null;
     /**
      * This setting controls how the API handles gestures on the map. Allowed
      * values: <ul> <li> <code>"cooperative"</code>: Scroll events and
@@ -3831,13 +3835,13 @@ declare namespace google.maps {
      * greedy, depending on whether the page is scrollable or in an iframe.
      * </ul>
      */
-    gestureHandling?: string|null;
+    gestureHandling?: string | null;
     /**
      * The heading for aerial imagery in degrees measured clockwise from
      * cardinal direction North. Headings are snapped to the nearest available
      * angle for which imagery is available.
      */
-    heading?: number|null;
+    heading?: number | null;
     /**
      * Whether the map should allow fractional zoom levels. Listen to
      * <code>isfractionalzoomenabled_changed</code> to know when the default has
@@ -3845,31 +3849,31 @@ declare namespace google.maps {
      * @defaultValue <code>true</code> for vector maps and <code>false</code>
      * for raster maps
      */
-    isFractionalZoomEnabled?: boolean|null;
+    isFractionalZoomEnabled?: boolean | null;
     /**
      * If <code>false</code>, prevents the map from being controlled by the
      * keyboard. Keyboard shortcuts are enabled by default.
      */
-    keyboardShortcuts?: boolean|null;
+    keyboardShortcuts?: boolean | null;
     /**
      * The <a
      * href="https://developers.google.com/maps/documentation/get-map-id">Map
      * ID</a> of the map. This parameter cannot be set or changed after a map is
      * instantiated.
      */
-    mapId?: string|null;
+    mapId?: string | null;
     /**
      * The initial enabled/disabled state of the Map type control.
      */
-    mapTypeControl?: boolean|null;
+    mapTypeControl?: boolean | null;
     /**
      * The initial display options for the Map type control.
      */
-    mapTypeControlOptions?: google.maps.MapTypeControlOptions|null;
+    mapTypeControlOptions?: google.maps.MapTypeControlOptions | null;
     /**
      * The initial Map mapTypeId. Defaults to <code>ROADMAP</code>.
      */
-    mapTypeId?: null|string;
+    mapTypeId?: null | string;
     /**
      * The maximum zoom level which will be displayed on the map. If omitted, or
      * set to <code>null</code>, the maximum zoom from the current map type is
@@ -3878,7 +3882,7 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/javascript/maxzoom">maximum
      * zoom level</a>.
      */
-    maxZoom?: number|null;
+    maxZoom?: number | null;
     /**
      * The minimum zoom level which will be displayed on the map. If omitted, or
      * set to <code>null</code>, the minimum zoom from the current map type is
@@ -3887,11 +3891,11 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/javascript/maxzoom">maximum
      * zoom level</a>.
      */
-    minZoom?: number|null;
+    minZoom?: number | null;
     /**
      * If <code>true</code>, do not clear the contents of the Map div.
      */
-    noClear?: boolean|null;
+    noClear?: boolean | null;
     /**
      * The enabled/disabled state of the Pan control. <p> Note: The Pan control
      * is not available in the new set of controls introduced in v3.22 of the
@@ -3901,7 +3905,7 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/articles/v322-controls-diff">What&#39;s
      * New in the v3.22 Map Controls</a>.
      */
-    panControl?: boolean|null;
+    panControl?: boolean | null;
     /**
      * The display options for the Pan control. <p> Note: The Pan control is not
      * available in the new set of controls introduced in v3.22 of the Google
@@ -3911,29 +3915,29 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/articles/v322-controls-diff">What&#39;s
      * New in the v3.22 Map Controls</a>.
      */
-    panControlOptions?: google.maps.PanControlOptions|null;
+    panControlOptions?: google.maps.PanControlOptions | null;
     /**
      * Defines a boundary that restricts the area of the map accessible to
      * users. When set, a user can only pan and zoom while the camera view stays
      * inside the limits of the boundary.
      */
-    restriction?: google.maps.MapRestriction|null;
+    restriction?: google.maps.MapRestriction | null;
     /**
      * The enabled/disabled state of the Rotate control.
      */
-    rotateControl?: boolean|null;
+    rotateControl?: boolean | null;
     /**
      * The display options for the Rotate control.
      */
-    rotateControlOptions?: google.maps.RotateControlOptions|null;
+    rotateControlOptions?: google.maps.RotateControlOptions | null;
     /**
      * The initial enabled/disabled state of the Scale control.
      */
-    scaleControl?: boolean|null;
+    scaleControl?: boolean | null;
     /**
      * The initial display options for the Scale control.
      */
-    scaleControlOptions?: google.maps.ScaleControlOptions|null;
+    scaleControlOptions?: google.maps.ScaleControlOptions | null;
     /**
      * If <code>false</code>, disables zooming on the map using a mouse scroll
      * wheel. The scrollwheel is enabled by default. <p><strong>Note</strong>:
@@ -3941,31 +3945,31 @@ declare namespace google.maps {
      * using scrollwheel, you can use the <code>gestureHandling</code> property,
      * and set it to either <code>"cooperative"</code> or <code>"none"</code>.
      */
-    scrollwheel?: boolean|null;
+    scrollwheel?: boolean | null;
     /**
      * A <code>StreetViewPanorama</code> to display when the Street View pegman
      * is dropped on the map. If no panorama is specified, a default
      * <code>StreetViewPanorama</code> will be displayed in the map&#39;s
      * <code>div</code> when the pegman is dropped.
      */
-    streetView?: google.maps.StreetViewPanorama|null;
+    streetView?: google.maps.StreetViewPanorama | null;
     /**
      * The initial enabled/disabled state of the Street View Pegman control.
      * This control is part of the default UI, and should be set to
      * <code>false</code> when displaying a map type on which the Street View
      * road overlay should not appear (e.g. a non-Earth map type).
      */
-    streetViewControl?: boolean|null;
+    streetViewControl?: boolean | null;
     /**
      * The initial display options for the Street View Pegman control.
      */
-    streetViewControlOptions?: google.maps.StreetViewControlOptions|null;
+    streetViewControlOptions?: google.maps.StreetViewControlOptions | null;
     /**
      * Styles to apply to each of the default map types. Note that for
      * <code>satellite</code>/<code>hybrid</code> and <code>terrain</code>
      * modes, these styles will only apply to labels and geometry.
      */
-    styles?: google.maps.MapTypeStyle[]|null;
+    styles?: google.maps.MapTypeStyle[] | null;
     /**
      * For vector maps, sets the angle of incidence of the map. The allowed
      * values are restricted depending on the zoom level of the map. For raster
@@ -3984,22 +3988,22 @@ declare namespace google.maps {
      * do not <code>bind()</code> the <code>tilt</code> property; doing so may
      * yield unpredictable effects.
      */
-    tilt?: number|null;
+    tilt?: number | null;
     /**
      * The initial Map zoom level. Valid zoom values are numbers from zero up to
      * the supported <a
      * href="https://developers.google.com/maps/documentation/javascript/maxzoom">maximum
      * zoom level</a>. Larger zoom values correspond to a higher resolution.
      */
-    zoom?: number|null;
+    zoom?: number | null;
     /**
      * The enabled/disabled state of the Zoom control.
      */
-    zoomControl?: boolean|null;
+    zoomControl?: boolean | null;
     /**
      * The display options for the Zoom control.
      */
-    zoomControlOptions?: google.maps.ZoomControlOptions|null;
+    zoomControlOptions?: google.maps.ZoomControlOptions | null;
   }
 }
 declare namespace google.maps {
@@ -4042,7 +4046,7 @@ declare namespace google.maps {
      * respectively, for example, <code>latLngBounds: {north: northLat, south:
      * southLat, west: -180, east: 180}</code>.
      */
-    latLngBounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    latLngBounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * Bounds can be made more restrictive by setting the
      * <code>strictBounds</code> flag to <code>true</code>. This reduces how far
@@ -4064,7 +4068,7 @@ declare namespace google.maps {
      * Alt text to display when this MapType&#39;s button is hovered over in the
      * MapTypeControl. Optional.
      */
-    alt: string|null;
+    alt: string | null;
     /**
      * Returns a tile for the given tile coordinate (x, y) and zoom level. This
      * tile will be appended to the given ownerDocument. Not available for base
@@ -4074,8 +4078,8 @@ declare namespace google.maps {
      * @param ownerDocument The document which owns this tile.
      */
     getTile(
-        tileCoord: google.maps.Point|null, zoom: number,
-        ownerDocument: Document|null): Element|null;
+      tileCoord: google.maps.Point | null, zoom: number,
+      ownerDocument: Document | null): Element | null;
     /**
      * The maximum zoom level for the map when displaying this MapType. Required
      * for base MapTypes, ignored for overlay MapTypes.
@@ -4089,12 +4093,12 @@ declare namespace google.maps {
     /**
      * Name to display in the MapTypeControl. Optional.
      */
-    name: string|null;
+    name: string | null;
     /**
      * The Projection used to render this MapType. Optional; defaults to
      * Mercator.
      */
-    projection: google.maps.Projection|null;
+    projection: google.maps.Projection | null;
     /**
      * Radius of the planet for the map, in meters. Optional; defaults to
      * Earth&#39;s equatorial radius of 6378137 meters.
@@ -4105,11 +4109,11 @@ declare namespace google.maps {
      * tile will have already been removed from the document. Optional.
      * @param tile Tile to release.
      */
-    releaseTile(tile: Element|null): void;
+    releaseTile(tile: Element | null): void;
     /**
      * The dimensions of each tile. Required.
      */
-    tileSize: google.maps.Size|null;
+    tileSize: google.maps.Size | null;
   }
 }
 declare namespace google.maps {
@@ -4120,16 +4124,16 @@ declare namespace google.maps {
     /**
      * IDs of map types to show in the control.
      */
-    mapTypeIds?: (string)[]|null;
+    mapTypeIds?: (string)[] | null;
     /**
      * Position id. Used to specify the position of the control on the map.
      * @defaultValue {@link google.maps.ControlPosition.TOP_RIGHT}
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
     /**
      * Style id. Used to select what style of map type control to display.
      */
-    style?: google.maps.MapTypeControlStyle|null;
+    style?: google.maps.MapTypeControlStyle | null;
   }
 }
 declare namespace google.maps {
@@ -4213,7 +4217,7 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/javascript/style-reference#style-elements">style
      * reference</a>.
      */
-    elementType?: string|null;
+    elementType?: string | null;
     /**
      * The feature, or group of features, to which a styler should be applied.
      * Optional. If <code>featureType</code> is not specified, the value is
@@ -4222,7 +4226,7 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/javascript/style-reference#style-features">style
      * reference</a>.
      */
-    featureType?: string|null;
+    featureType?: string | null;
     /**
      * The style rules to apply to the selected map features and elements. The
      * rules are applied in the order that you specify in this array. For
@@ -4258,10 +4262,10 @@ declare namespace google.maps {
     /**
      * Identifies the type of error produced by the API.
      */
-    code: google.maps.DirectionsStatus|google.maps.DistanceMatrixStatus|
-        google.maps.ElevationStatus|google.maps.GeocoderStatus|
-        google.maps.MaxZoomStatus|google.maps.places.PlacesServiceStatus|
-        google.maps.StreetViewStatus;
+    code: google.maps.DirectionsStatus | google.maps.DistanceMatrixStatus |
+      google.maps.ElevationStatus | google.maps.GeocoderStatus |
+      google.maps.MaxZoomStatus | google.maps.places.PlacesServiceStatus |
+      google.maps.StreetViewStatus;
     /**
      * Represents the network service that responded with the error.
      */
@@ -4388,11 +4392,11 @@ declare namespace google.maps {
 }
 declare namespace google.maps {
   class Marker extends google.maps.MVCObject {
-    constructor(opts?: google.maps.MarkerOptions|null);
+    constructor(opts?: google.maps.MarkerOptions | null);
     /**
      * Get the currently running animation.
      */
-    getAnimation(): google.maps.Animation|null|undefined;
+    getAnimation(): google.maps.Animation | null | undefined;
     /**
      * Get the clickable status of the {@link google.maps.Marker}.
      */
@@ -4400,7 +4404,7 @@ declare namespace google.maps {
     /**
      * Get the mouse cursor type shown on hover.
      */
-    getCursor(): string|null|undefined;
+    getCursor(): string | null | undefined;
     /**
      * Get the draggable status of the {@link google.maps.Marker}.
      */
@@ -4409,35 +4413,35 @@ declare namespace google.maps {
      * Get the icon of the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.icon}.
      */
-    getIcon(): string|google.maps.Icon|null|google.maps.Symbol|undefined;
+    getIcon(): string | google.maps.Icon | null | google.maps.Symbol | undefined;
     /**
      * Get the label of the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.label}.
      */
-    getLabel(): google.maps.MarkerLabel|null|undefined;
+    getLabel(): google.maps.MarkerLabel | null | undefined;
     /**
      * Get the map or panaroama the {@link google.maps.Marker} is rendered on.
      */
-    getMap(): google.maps.Map|null|google.maps.StreetViewPanorama;
+    getMap(): google.maps.Map | null | google.maps.StreetViewPanorama;
     /**
      * Get the opacity of the {@link google.maps.Marker}.
      */
-    getOpacity(): number|null|undefined;
+    getOpacity(): number | null | undefined;
     /**
      * Get the position of the {@link google.maps.Marker}.
      */
-    getPosition(): google.maps.LatLng|null|undefined;
+    getPosition(): google.maps.LatLng | null | undefined;
     /**
      * Get the shape of the {@link google.maps.Marker} used for interaction.
      * See {@link google.maps.MarkerOptions.shape} and {@link
      * google.maps.MarkerShape}.
      */
-    getShape(): google.maps.MarkerShape|null|undefined;
+    getShape(): google.maps.MarkerShape | null | undefined;
     /**
      * Get the title of the {@link google.maps.Marker} tooltip. See {@link
      * google.maps.MarkerOptions.title}.
      */
-    getTitle(): string|null|undefined;
+    getTitle(): string | null | undefined;
     /**
      * Get the visibility of the {@link google.maps.Marker}.
      */
@@ -4446,7 +4450,7 @@ declare namespace google.maps {
      * Get the zIndex of the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.zIndex}.
      */
-    getZIndex(): number|null|undefined;
+    getZIndex(): number | null | undefined;
     /**
      * Start an animation. Any ongoing animation will be cancelled. Currently
      * supported animations are: {@link google.maps.Animation.BOUNCE}, {@link
@@ -4454,7 +4458,7 @@ declare namespace google.maps {
      * animation to stop.
      * @param animation The animation to play.
      */
-    setAnimation(animation?: google.maps.Animation|null): void;
+    setAnimation(animation?: google.maps.Animation | null): void;
     /**
      * Set if the {@link google.maps.Marker} is clickable.
      * @param flag If <code>true</code>, the Marker can be clicked.
@@ -4464,55 +4468,55 @@ declare namespace google.maps {
      * Set the mouse cursor type shown on hover.
      * @param cursor Mouse cursor type.
      */
-    setCursor(cursor?: string|null): void;
+    setCursor(cursor?: string | null): void;
     /**
      * Set if the {@link google.maps.Marker} is draggable.
      * @param flag If <code>true</code>, the Marker can be dragged.
      */
-    setDraggable(flag: boolean|null): void;
+    setDraggable(flag: boolean | null): void;
     /**
      * Set the icon for the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.icon}.
      */
-    setIcon(icon?: string|google.maps.Icon|null|google.maps.Symbol): void;
+    setIcon(icon?: string | google.maps.Icon | null | google.maps.Symbol): void;
     /**
      * Set the label for the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.label}.
      * @param label The label can either be a character string or a {@link
      *     google.maps.MarkerLabel} object.
      */
-    setLabel(label?: string|google.maps.MarkerLabel|null): void;
+    setLabel(label?: string | google.maps.MarkerLabel | null): void;
     /**
      * Renders the {@link google.maps.Marker} on the specified map or panorama.
      * If map is set to <code>null</code>, the marker will be removed.
      */
-    setMap(map: google.maps.Map|null|google.maps.StreetViewPanorama): void;
+    setMap(map: google.maps.Map | null | google.maps.StreetViewPanorama): void;
     /**
      * Set the opacity of the {@link google.maps.Marker}.
      * @param opacity A number between 0.0, transparent, and 1.0, opaque.
      */
-    setOpacity(opacity?: number|null): void;
+    setOpacity(opacity?: number | null): void;
     /**
      * Set the options for the {@link google.maps.Marker}.
      */
-    setOptions(options: google.maps.MarkerOptions|null): void;
+    setOptions(options: google.maps.MarkerOptions | null): void;
     /**
      * Set the postition for the {@link google.maps.Marker}.
      * @param latlng The new position.
      */
-    setPosition(latlng?: google.maps.LatLng|null|
-                google.maps.LatLngLiteral): void;
+    setPosition(latlng?: google.maps.LatLng | null |
+      google.maps.LatLngLiteral): void;
     /**
      * Set the shape of the {@link google.maps.Marker} used for interaction.
      * See {@link google.maps.MarkerOptions.shape} and {@link
      * google.maps.MarkerShape}.
      */
-    setShape(shape?: google.maps.MarkerShape|null): void;
+    setShape(shape?: google.maps.MarkerShape | null): void;
     /**
      * Set the title of the {@link google.maps.Marker} tooltip. See {@link
      * google.maps.MarkerOptions.title}.
      */
-    setTitle(title?: string|null): void;
+    setTitle(title?: string | null): void;
     /**
      * Set if the {@link google.maps.Marker} is visible.
      * @param visible If <code>true</code>, the Marker is visible
@@ -4522,7 +4526,7 @@ declare namespace google.maps {
      * Set the zIndex of the {@link google.maps.Marker}. See {@link
      * google.maps.MarkerOptions.zIndex}.
      */
-    setZIndex(zIndex?: number|null): void;
+    setZIndex(zIndex?: number | null): void;
     /**
      * The maximum default z-index that the API will assign to a marker. You may
      * set a higher z-index to bring a marker to the front.
@@ -4587,44 +4591,44 @@ declare namespace google.maps {
      * The offset from the marker&#39;s position to the tip of an InfoWindow
      * that has been opened with the marker as anchor.
      */
-    anchorPoint?: google.maps.Point|null;
+    anchorPoint?: google.maps.Point | null;
     /**
      * Which animation to play when marker is added to a map.
      * @defaultValue <code>null</code>
      */
-    animation?: google.maps.Animation|null;
+    animation?: google.maps.Animation | null;
     /**
      * If <code>true</code>, the marker receives mouse and touch events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * Set a collision behavior for markers on vector maps.
      * @defaultValue <code>null</code>
      */
-    collisionBehavior?: string|null;
+    collisionBehavior?: string | null;
     /**
      * If <code>false</code>, disables cross that appears beneath the marker
      * when dragging.
      * @defaultValue <code>true</code>
      */
-    crossOnDrag?: boolean|null;
+    crossOnDrag?: boolean | null;
     /**
      * Mouse cursor type to show on hover.
      * @defaultValue <code>pointer</code>
      */
-    cursor?: string|null;
+    cursor?: string | null;
     /**
      * If <code>true</code>, the marker can be dragged.
      * @defaultValue <code>false</code>
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * Icon for the foreground. If a string is provided, it is treated as though
      * it were an <code>Icon</code> with the string as <code>url</code>.
      */
-    icon?: string|null|google.maps.Icon|google.maps.Symbol;
+    icon?: string | null | google.maps.Icon | google.maps.Symbol;
     /**
      * Adds a label to the marker. A marker label is a letter or number that
      * appears inside a marker. The label can either be a string, or a
@@ -4635,18 +4639,18 @@ declare namespace google.maps {
      * currently only used for accessibility text for non-optimized markers.
      * @defaultValue <code>null</code>
      */
-    label?: string|null|google.maps.MarkerLabel;
+    label?: string | null | google.maps.MarkerLabel;
     /**
      * Map on which to display Marker. The map is required to display the marker
      * and can be provided with {@link google.maps.Marker.setMap} if not
      * provided at marker construction.
      */
-    map?: google.maps.Map|null|google.maps.StreetViewPanorama;
+    map?: google.maps.Map | null | google.maps.StreetViewPanorama;
     /**
      * A number between 0.0, transparent, and 1.0, opaque.
      * @defaultValue 1.0
      */
-    opacity?: number|null;
+    opacity?: number | null;
     /**
      * Optimization enhances performance by rendering many markers as a single
      * static element. This is useful in cases where a large number of markers
@@ -4654,18 +4658,18 @@ declare namespace google.maps {
      * href="https://developers.google.com/maps/documentation/javascript/markers#optimize">marker
      * optimization</a>.
      */
-    optimized?: boolean|null;
+    optimized?: boolean | null;
     /**
      * Sets the marker position. A marker may be constructed but not displayed
      * until its position is provided - for example, by a user&#39;s actions or
      * choices. A marker position can be provided with {@link
      * google.maps.Marker.setPosition} if not provided at marker construction.
      */
-    position?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    position?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * Image map region definition used for drag/click.
      */
-    shape?: google.maps.MarkerShape|null;
+    shape?: google.maps.MarkerShape | null;
     /**
      * Rollover text. If provided, an accessibility text (e.g. for use with
      * screen readers) will be added to the marker with the provided value.
@@ -4673,12 +4677,12 @@ declare namespace google.maps {
      * accessibility text for non-optimized markers.
      * @defaultValue <code>undefined</code>
      */
-    title?: string|null;
+    title?: string | null;
     /**
      * If <code>true</code>, the marker is visible.
      * @defaultValue <code>true</code>
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * All markers are displayed on the map in order of their zIndex, with
      * higher values displaying in front of markers with lower values. By
@@ -4686,7 +4690,7 @@ declare namespace google.maps {
      * screen, with lower markers appearing in front of markers further up the
      * screen.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -4715,7 +4719,7 @@ declare namespace google.maps {
      * the coordinates of the upper-left corner of the rectangle and x2,y2 are
      * the coordinates of the lower-right coordinates of the rectangle.
      */
-    coords: number[]|null;
+    coords: number[] | null;
     /**
      * Describes the shape&#39;s type and can be <code>circle</code>,
      * <code>poly</code> or <code>rect</code>.
@@ -4733,7 +4737,7 @@ declare namespace google.maps {
      * with {@link google.maps.MaxZoomService.getMaxZoomAtLatLng} (it is not
      * defined when using Promises).
      */
-    status: google.maps.MaxZoomStatus|null;
+    status: google.maps.MaxZoomStatus | null;
     /**
      * The maximum zoom level found at the given <code>LatLng</code>.
      */
@@ -4754,9 +4758,9 @@ declare namespace google.maps {
      * passed a <code>MaxZoomResult</code>.
      */
     getMaxZoomAtLatLng(
-        latlng: google.maps.LatLng|null|google.maps.LatLngLiteral,
-        callback?: (a: google.maps.MaxZoomResult) => void):
-        Promise<google.maps.MaxZoomResult>;
+      latlng: google.maps.LatLng | null | google.maps.LatLngLiteral,
+      callback?: (a: google.maps.MaxZoomResult) => void):
+      Promise<google.maps.MaxZoomResult>;
   }
 }
 declare namespace google.maps {
@@ -4786,7 +4790,7 @@ declare namespace google.maps {
      * Position id. This is used to specify the position of this control on the
      * panorama. The default position is <code>RIGHT_BOTTOM</code>.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -4819,12 +4823,12 @@ declare namespace google.maps {
      * computationally expensive work in this method.
      */
     draw(): void;
-    getMap(): google.maps.Map|null|google.maps.StreetViewPanorama;
+    getMap(): google.maps.Map | null | google.maps.StreetViewPanorama;
     /**
      * Returns the panes in which this OverlayView can be rendered. The panes
      * are not initialized until <code>onAdd</code> is called by the API.
      */
-    getPanes(): google.maps.MapPanes|null;
+    getPanes(): google.maps.MapPanes | null;
     /**
      * Returns the <code>MapCanvasProjection</code> object associated with this
      * <code>OverlayView</code>. The projection is not initialized until
@@ -4847,7 +4851,7 @@ declare namespace google.maps {
      * @param map The map or panorama. If <code>null</code>, the layer will be
      *     removed.
      */
-    setMap(map: google.maps.Map|null|google.maps.StreetViewPanorama): void;
+    setMap(map: google.maps.Map | null | google.maps.StreetViewPanorama): void;
     /**
      * Stops click, tap, drag, and wheel events on the element from bubbling up
      * to the map. Use this to prevent map dragging and zooming, as well as map
@@ -4890,7 +4894,7 @@ declare namespace google.maps {
      * Position id. Used to specify the position of the control on the map.
      * @defaultValue {@link google.maps.ControlPosition.TOP_LEFT}
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -4919,7 +4923,7 @@ declare namespace google.maps {
     /**
      * The path along which to collect elevation values.
      */
-    path?: (google.maps.LatLng|google.maps.LatLngLiteral)[]|null;
+    path?: (google.maps.LatLng | google.maps.LatLngLiteral)[] | null;
     /**
      * Required. The number of equidistant points along the given path for which
      * to retrieve elevation data, including the endpoints. The number of
@@ -4954,7 +4958,7 @@ declare namespace google.maps {
     /**
      * The <code>LatLng</code> of the entity described by this place.
      */
-    location?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    location?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * The place ID of the place (such as a business or point of interest). The
      * place ID is a unique identifier of a place in the Google Maps database.
@@ -4987,7 +4991,7 @@ declare namespace google.maps {
     /**
      * Compares two Points
      */
-    equals(other: google.maps.Point|null): boolean;
+    equals(other: google.maps.Point | null): boolean;
     /**
      * Returns a string representation of this Point.
      */
@@ -5055,7 +5059,7 @@ declare namespace google.maps {
      * offers a simpler way of creating holes because it handles the order of
      * the inner and outer paths for you.
      */
-    constructor(opts?: google.maps.PolygonOptions|null);
+    constructor(opts?: google.maps.PolygonOptions | null);
     /**
      * Returns whether this shape can be dragged by the user.
      */
@@ -5067,7 +5071,7 @@ declare namespace google.maps {
     /**
      * Returns the map on which this shape is attached.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Retrieves the first path.
      */
@@ -5094,18 +5098,18 @@ declare namespace google.maps {
      * Renders this shape on the specified map. If map is set to
      * <code>null</code>, the shape will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.PolygonOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.PolygonOptions | null): void;
     /**
      * Sets the first path. See <em><code><a
      * href="#PolygonOptions">PolygonOptions</a></code></em> for more details.
      */
-    setPath(path: google.maps.MVCArray<google.maps.LatLng>|
-            (google.maps.LatLng|google.maps.LatLngLiteral)[]): void;
+    setPath(path: google.maps.MVCArray<google.maps.LatLng> |
+      (google.maps.LatLng | google.maps.LatLngLiteral)[]): void;
     /**
      * Sets the path for this polygon.
      */
-    setPaths(paths: google.maps.MVCArray<any>|any[]): void;
+    setPaths(paths: google.maps.MVCArray<any> | any[]): void;
     /**
      * Hides this poly if set to <code>false</code>.
      */
@@ -5122,28 +5126,28 @@ declare namespace google.maps {
      * Indicates whether this <code>Polygon</code> handles mouse events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can drag this shape over the map.
      * The <code>geodesic</code> property defines the mode of dragging.
      * @defaultValue <code>false</code>
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can edit this shape by dragging the
      * control points shown at the vertices and on each segment.
      * @defaultValue <code>false</code>
      */
-    editable?: boolean|null;
+    editable?: boolean | null;
     /**
      * The fill color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    fillColor?: string|null;
+    fillColor?: string | null;
     /**
      * The fill opacity between 0.0 and 1.0
      */
-    fillOpacity?: number|null;
+    fillOpacity?: number | null;
     /**
      * When <code>true</code>, edges of the polygon are interpreted as geodesic
      * and will follow the curvature of the Earth. When <code>false</code>,
@@ -5152,11 +5156,11 @@ declare namespace google.maps {
      * as the dimensions are maintained relative to the surface of the earth.
      * @defaultValue <code>false</code>
      */
-    geodesic?: boolean|null;
+    geodesic?: boolean | null;
     /**
      * Map on which to display Polygon.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The ordered sequence of coordinates that designates a closed loop. Unlike
      * polylines, a polygon may consist of one or more paths. As a result, the
@@ -5169,34 +5173,34 @@ declare namespace google.maps {
      * <code>LatLng</code>s from the <code>MVCArray</code> will automatically
      * update the polygon on the map.
      */
-    paths?: null|google.maps.MVCArray<any>|any[];
+    paths?: null | google.maps.MVCArray<any> | any[];
     /**
      * The stroke color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    strokeColor?: string|null;
+    strokeColor?: string | null;
     /**
      * The stroke opacity between 0.0 and 1.0
      */
-    strokeOpacity?: number|null;
+    strokeOpacity?: number | null;
     /**
      * The stroke position.
      * @defaultValue {@link google.maps.StrokePosition.CENTER}
      */
-    strokePosition?: google.maps.StrokePosition|null;
+    strokePosition?: google.maps.StrokePosition | null;
     /**
      * The stroke width in pixels.
      */
-    strokeWeight?: number|null;
+    strokeWeight?: number | null;
     /**
      * Whether this polygon is visible on the map.
      * @defaultValue <code>true</code>
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * The zIndex compared to other polys.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -5207,7 +5211,7 @@ declare namespace google.maps {
     /**
      * A polyline is a linear overlay of connected line segments on the map.
      */
-    constructor(opts?: google.maps.PolylineOptions|null);
+    constructor(opts?: google.maps.PolylineOptions | null);
     /**
      * Returns whether this shape can be dragged by the user.
      */
@@ -5219,7 +5223,7 @@ declare namespace google.maps {
     /**
      * Returns the map on which this shape is attached.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Retrieves the path.
      */
@@ -5242,14 +5246,14 @@ declare namespace google.maps {
      * Renders this shape on the specified map. If map is set to
      * <code>null</code>, the shape will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.PolylineOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.PolylineOptions | null): void;
     /**
      * Sets the path. See <em><code><a
      * href="#PolylineOptions">PolylineOptions</a></code></em> for more details.
      */
-    setPath(path: google.maps.MVCArray<google.maps.LatLng>|
-            (google.maps.LatLng|google.maps.LatLngLiteral)[]): void;
+    setPath(path: google.maps.MVCArray<google.maps.LatLng> |
+      (google.maps.LatLng | google.maps.LatLngLiteral)[]): void;
     /**
      * Hides this poly if set to <code>false</code>.
      */
@@ -5266,19 +5270,19 @@ declare namespace google.maps {
      * Indicates whether this <code>Polyline</code> handles mouse events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can drag this shape over the map.
      * The <code>geodesic</code> property defines the mode of dragging.
      * @defaultValue <code>false</code>
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can edit this shape by dragging the
      * control points shown at the vertices and on each segment.
      * @defaultValue <code>false</code>
      */
-    editable?: boolean|null;
+    editable?: boolean | null;
     /**
      * When <code>true</code>, edges of the polygon are interpreted as geodesic
      * and will follow the curvature of the Earth. When <code>false</code>,
@@ -5287,15 +5291,15 @@ declare namespace google.maps {
      * as the dimensions are maintained relative to the surface of the earth.
      * @defaultValue <code>false</code>
      */
-    geodesic?: boolean|null;
+    geodesic?: boolean | null;
     /**
      * The icons to be rendered along the polyline.
      */
-    icons?: google.maps.IconSequence[]|null;
+    icons?: google.maps.IconSequence[] | null;
     /**
      * Map on which to display Polyline.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The ordered sequence of coordinates of the Polyline. This path may be
      * specified using either a simple array of <code>LatLng</code>s, or an
@@ -5304,30 +5308,30 @@ declare namespace google.maps {
      * or removing LatLngs in the <code>MVCArray</code> will automatically
      * update the polyline on the map.
      */
-    path?: google.maps.MVCArray<google.maps.LatLng>|null|
-        (google.maps.LatLng|google.maps.LatLngLiteral)[];
+    path?: google.maps.MVCArray<google.maps.LatLng> | null |
+    (google.maps.LatLng | google.maps.LatLngLiteral)[];
     /**
      * The stroke color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    strokeColor?: string|null;
+    strokeColor?: string | null;
     /**
      * The stroke opacity between 0.0 and 1.0.
      */
-    strokeOpacity?: number|null;
+    strokeOpacity?: number | null;
     /**
      * The stroke width in pixels.
      */
-    strokeWeight?: number|null;
+    strokeWeight?: number | null;
     /**
      * Whether this polyline is visible on the map.
      * @defaultValue <code>true</code>
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * The zIndex compared to other polys.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -5342,8 +5346,8 @@ declare namespace google.maps {
      * <code>Point</code>.
      */
     fromLatLngToPoint(
-        latLng: google.maps.LatLng|google.maps.LatLngLiteral,
-        point?: google.maps.Point): google.maps.Point|null;
+      latLng: google.maps.LatLng | google.maps.LatLngLiteral,
+      point?: google.maps.Point): google.maps.Point | null;
     /**
      * This interface specifies a function which implements translation from
      * world coordinates on a map projection to <code>LatLng</code> values. The
@@ -5353,7 +5357,7 @@ declare namespace google.maps {
      * calculate the <code>LatLng</code>.
      */
     fromPointToLatLng(pixel: google.maps.Point, noClampNoWrap?: boolean):
-        google.maps.LatLng|null;
+      google.maps.LatLng | null;
   }
 }
 declare namespace google.maps {
@@ -5364,11 +5368,11 @@ declare namespace google.maps {
     /**
      * A rectangle overlay.
      */
-    constructor(opts?: google.maps.RectangleOptions|null);
+    constructor(opts?: google.maps.RectangleOptions | null);
     /**
      * Returns the bounds of this rectangle.
      */
-    getBounds(): google.maps.LatLngBounds|null;
+    getBounds(): google.maps.LatLngBounds | null;
     /**
      * Returns whether this rectangle can be dragged by the user.
      */
@@ -5380,7 +5384,7 @@ declare namespace google.maps {
     /**
      * Returns the map on which this rectangle is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Returns whether this rectangle is visible on the map.
      */
@@ -5388,8 +5392,8 @@ declare namespace google.maps {
     /**
      * Sets the bounds of this rectangle.
      */
-    setBounds(bounds: google.maps.LatLngBounds|null|
-              google.maps.LatLngBoundsLiteral): void;
+    setBounds(bounds: google.maps.LatLngBounds | null |
+      google.maps.LatLngBoundsLiteral): void;
     /**
      * If set to <code>true</code>, the user can drag this rectangle over the
      * map.
@@ -5404,8 +5408,8 @@ declare namespace google.maps {
      * Renders the rectangle on the specified map. If map is set to
      * <code>null</code>, the rectangle will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.RectangleOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.RectangleOptions | null): void;
     /**
      * Hides this rectangle if set to <code>false</code>.
      */
@@ -5421,64 +5425,64 @@ declare namespace google.maps {
     /**
      * The bounds.
      */
-    bounds?: google.maps.LatLngBounds|null|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | null | google.maps.LatLngBoundsLiteral;
     /**
      * Indicates whether this <code>Rectangle</code> handles mouse events.
      * @defaultValue <code>true</code>
      */
-    clickable?: boolean|null;
+    clickable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can drag this rectangle over the
      * map.
      * @defaultValue <code>false</code>
      */
-    draggable?: boolean|null;
+    draggable?: boolean | null;
     /**
      * If set to <code>true</code>, the user can edit this rectangle by dragging
      * the control points shown at the corners and on each edge.
      * @defaultValue <code>false</code>
      */
-    editable?: boolean|null;
+    editable?: boolean | null;
     /**
      * The fill color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    fillColor?: string|null;
+    fillColor?: string | null;
     /**
      * The fill opacity between 0.0 and 1.0
      */
-    fillOpacity?: number|null;
+    fillOpacity?: number | null;
     /**
      * Map on which to display Rectangle.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The stroke color. All CSS3 colors are supported except for extended named
      * colors.
      */
-    strokeColor?: string|null;
+    strokeColor?: string | null;
     /**
      * The stroke opacity between 0.0 and 1.0
      */
-    strokeOpacity?: number|null;
+    strokeOpacity?: number | null;
     /**
      * The stroke position.
      * @defaultValue {@link google.maps.StrokePosition.CENTER}
      */
-    strokePosition?: google.maps.StrokePosition|null;
+    strokePosition?: google.maps.StrokePosition | null;
     /**
      * The stroke width in pixels.
      */
-    strokeWeight?: number|null;
+    strokeWeight?: number | null;
     /**
      * Whether this rectangle is visible on the map.
      * @defaultValue <code>true</code>
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * The zIndex compared to other polys.
      */
-    zIndex?: number|null;
+    zIndex?: number | null;
   }
 }
 declare namespace google.maps {
@@ -5507,7 +5511,7 @@ declare namespace google.maps {
      * Position id. Used to specify the position of the control on the map. The
      * default position is <code>TOP_LEFT</code>.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -5518,7 +5522,7 @@ declare namespace google.maps {
     /**
      * Style id. Used to select what style of scale control to display.
      */
-    style?: google.maps.ScaleControlStyle|null;
+    style?: google.maps.ScaleControlStyle | null;
   }
 }
 declare namespace google.maps {
@@ -5561,11 +5565,11 @@ declare namespace google.maps {
 declare namespace google.maps {
   class Size {
     constructor(
-        width: number, height: number, widthUnit?: string, heightUnit?: string);
+      width: number, height: number, widthUnit?: string, heightUnit?: string);
     /**
      * Compares two Sizes.
      */
-    equals(other: google.maps.Size|null): boolean;
+    equals(other: google.maps.Size | null): boolean;
     /**
      * The height along the y-axis, in pixels.
      */
@@ -5589,7 +5593,7 @@ declare namespace google.maps {
      * Position id. This id is used to specify the position of the control on
      * the map. The default position is <code>TOP_LEFT</code>.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -5605,7 +5609,7 @@ declare namespace google.maps {
      * Street View control will be displayed as part of the navigation controls.
      * Otherwise, it will be displayed separately.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps {
@@ -5616,12 +5620,12 @@ declare namespace google.maps {
     /**
      * Returns the map on which this layer is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Renders the layer on the specified map. If the map is set to null, the
      * layer will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
   }
 }
 declare namespace google.maps {
@@ -5632,16 +5636,16 @@ declare namespace google.maps {
     /**
      * A localized string describing the link.
      */
-    description: string|null;
+    description: string | null;
     /**
      * The heading of the link.
      */
-    heading: number|null;
+    heading: number | null;
     /**
      * A unique identifier for the panorama. This id is stable within a session
      * but unstable across sessions.
      */
-    pano: string|null;
+    pano: string | null;
   }
 }
 declare namespace google.maps {
@@ -5652,11 +5656,11 @@ declare namespace google.maps {
     /**
      * A localized string describing the location.
      */
-    description?: string|null;
+    description?: string | null;
     /**
      * The latlng of the panorama.
      */
-    latLng?: google.maps.LatLng|null;
+    latLng?: google.maps.LatLng | null;
     /**
      * A unique identifier for the panorama. This is stable within a session but
      * unstable across sessions.
@@ -5665,7 +5669,7 @@ declare namespace google.maps {
     /**
      * Short description of the location.
      */
-    shortDescription?: string|null;
+    shortDescription?: string | null;
   }
 }
 declare namespace google.maps {
@@ -5678,24 +5682,24 @@ declare namespace google.maps {
     /**
      * Specifies the location where to search for a Street View panorama.
      */
-    location?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    location?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * Sets a preference for which panorama should be found within the radius:
      * the one nearest to the provided location, or the best one within the
      * radius.
      */
-    preference?: google.maps.StreetViewPreference|null;
+    preference?: google.maps.StreetViewPreference | null;
     /**
      * Sets a radius in meters in which to search for a panorama.
      * @defaultValue <code>50</code>
      */
-    radius?: number|null;
+    radius?: number | null;
     /**
      * Specifies the source of panoramas to search. This allows a restriction to
      * search for just outdoor panoramas for example.
      * @defaultValue {@link google.maps.StreetViewSource.DEFAULT}
      */
-    source?: google.maps.StreetViewSource|null;
+    source?: google.maps.StreetViewSource | null;
   }
 }
 declare namespace google.maps {
@@ -5707,7 +5711,7 @@ declare namespace google.maps {
     /**
      * Specifies the pano ID to search for.
      */
-    pano?: string|null;
+    pano?: string | null;
   }
 }
 declare namespace google.maps {
@@ -5725,8 +5729,8 @@ declare namespace google.maps {
      * <code>&lt;div&gt;</code> or bound to a <code>Map</code>.
      */
     constructor(
-        container: HTMLElement,
-        opts?: google.maps.StreetViewPanoramaOptions|null);
+      container: HTMLElement,
+      opts?: google.maps.StreetViewPanoramaOptions | null);
     /**
      * Additional controls to attach to the panorama. To add a control to the
      * panorama, add the control&#39;s <code>&lt;div&gt;</code> to the
@@ -5737,11 +5741,11 @@ declare namespace google.maps {
     /**
      * Returns the set of navigation links for the Street View panorama.
      */
-    getLinks(): (google.maps.StreetViewLink|null)[]|null;
+    getLinks(): (google.maps.StreetViewLink | null)[] | null;
     /**
      * Returns the StreetViewLocation of the current panorama.
      */
-    getLocation(): google.maps.StreetViewLocation|null;
+    getLocation(): google.maps.StreetViewLocation | null;
     /**
      * Returns the state of motion tracker. If <code>true</code> when the user
      * physically moves the device and the browser supports it, the Street View
@@ -5764,7 +5768,7 @@ declare namespace google.maps {
      * Returns the current <code>LatLng</code> position for the Street View
      * panorama.
      */
-    getPosition(): google.maps.LatLng|null;
+    getPosition(): google.maps.LatLng | null;
     /**
      * Returns the current point of view for the Street View panorama.
      */
@@ -5790,12 +5794,12 @@ declare namespace google.maps {
      * panoramas.
      */
     registerPanoProvider(
-        provider: (a: string) => google.maps.StreetViewPanoramaData | null,
-        opt_options?: google.maps.PanoProviderOptions): void;
+      provider: (a: string) => google.maps.StreetViewPanoramaData | null,
+      opt_options?: google.maps.PanoProviderOptions): void;
     /**
      * Sets the set of navigation links for the Street View panorama.
      */
-    setLinks(links: (google.maps.StreetViewLink|null)[]|null): void;
+    setLinks(links: (google.maps.StreetViewLink | null)[] | null): void;
     /**
      * Sets the state of motion tracker. If <code>true</code> when the user
      * physically moves the device and the browser supports it, the Street View
@@ -5805,7 +5809,7 @@ declare namespace google.maps {
     /**
      * Sets a collection of key-value pairs.
      */
-    setOptions(options: google.maps.StreetViewPanoramaOptions|null): void;
+    setOptions(options: google.maps.StreetViewPanoramaOptions | null): void;
     /**
      * Sets the current panorama ID for the Street View panorama.
      */
@@ -5814,8 +5818,8 @@ declare namespace google.maps {
      * Sets the current <code>LatLng</code> position for the Street View
      * panorama.
      */
-    setPosition(latLng: google.maps.LatLng|null|
-                google.maps.LatLngLiteral): void;
+    setPosition(latLng: google.maps.LatLng | null |
+      google.maps.LatLngLiteral): void;
     /**
      * Sets the point of view for the Street View panorama.
      */
@@ -5871,15 +5875,15 @@ declare namespace google.maps {
     /**
      * The enabled/disabled state of the address control.
      */
-    addressControl?: boolean|null;
+    addressControl?: boolean | null;
     /**
      * The display options for the address control.
      */
-    addressControlOptions?: google.maps.StreetViewAddressControlOptions|null;
+    addressControlOptions?: google.maps.StreetViewAddressControlOptions | null;
     /**
      * The enabled/disabled state of click-to-go.
      */
-    clickToGo?: boolean|null;
+    clickToGo?: boolean | null;
     /**
      * Size in pixels of the controls appearing on the panorama. This value must
      * be supplied directly when creating the Panorama, updating this value
@@ -5887,38 +5891,38 @@ declare namespace google.maps {
      * controls made by the Maps API itself. Does not scale developer created
      * custom controls.
      */
-    controlSize?: number|null;
+    controlSize?: number | null;
     /**
      * Enables/disables all default UI. May be overridden individually.
      */
-    disableDefaultUI?: boolean|null;
+    disableDefaultUI?: boolean | null;
     /**
      * Enables/disables zoom on double click.
      * @defaultValue <code>true</code>
      */
-    disableDoubleClickZoom?: boolean|null;
+    disableDoubleClickZoom?: boolean | null;
     /**
      * If <code>true</code>, the close button is displayed.
      * @defaultValue <code>false</code>
      */
-    enableCloseButton?: boolean|null;
+    enableCloseButton?: boolean | null;
     /**
      * The enabled/disabled state of the fullscreen control.
      */
-    fullscreenControl?: boolean|null;
+    fullscreenControl?: boolean | null;
     /**
      * The display options for the fullscreen control.
      */
-    fullscreenControlOptions?: google.maps.FullscreenControlOptions|null;
+    fullscreenControlOptions?: google.maps.FullscreenControlOptions | null;
     /**
      * The enabled/disabled state of the imagery acquisition date control.
      * Disabled by default.
      */
-    imageDateControl?: boolean|null;
+    imageDateControl?: boolean | null;
     /**
      * The enabled/disabled state of the links control.
      */
-    linksControl?: boolean|null;
+    linksControl?: boolean | null;
     /**
      * Whether motion tracking is on or off. Enabled by default when the motion
      * tracking control is present, so that the POV (point of view) follows the
@@ -5928,67 +5932,67 @@ declare namespace google.maps {
      * control appears but tracking is off. The user can tap the motion tracking
      * control to toggle this option.
      */
-    motionTracking?: boolean|null;
+    motionTracking?: boolean | null;
     /**
      * The enabled/disabled state of the motion tracking control. Enabled by
      * default when the device has motion data, so that the control appears on
      * the map. This is primarily applicable to mobile devices.
      */
-    motionTrackingControl?: boolean|null;
+    motionTrackingControl?: boolean | null;
     /**
      * The display options for the motion tracking control.
      */
-    motionTrackingControlOptions?: google.maps.MotionTrackingControlOptions|
-        null;
+    motionTrackingControlOptions?: google.maps.MotionTrackingControlOptions |
+    null;
     /**
      * The enabled/disabled state of the pan control.
      */
-    panControl?: boolean|null;
+    panControl?: boolean | null;
     /**
      * The display options for the pan control.
      */
-    panControlOptions?: google.maps.PanControlOptions|null;
+    panControlOptions?: google.maps.PanControlOptions | null;
     /**
      * The panorama ID, which should be set when specifying a custom panorama.
      */
-    pano?: string|null;
+    pano?: string | null;
     /**
      * The <code>LatLng</code> position of the Street View panorama.
      */
-    position?: google.maps.LatLng|null|google.maps.LatLngLiteral;
+    position?: google.maps.LatLng | null | google.maps.LatLngLiteral;
     /**
      * The camera orientation, specified as heading and pitch, for the panorama.
      */
-    pov?: google.maps.StreetViewPov|null;
+    pov?: google.maps.StreetViewPov | null;
     /**
      * If <code>false</code>, disables scrollwheel zooming in Street View.
      * @defaultValue <code>true</code>
      */
-    scrollwheel?: boolean|null;
+    scrollwheel?: boolean | null;
     /**
      * The display of street names on the panorama. If this value is not
      * specified, or is set to <code>true</code>, street names are displayed on
      * the panorama. If set to <code>false</code>, street names are not
      * displayed.
      */
-    showRoadLabels?: boolean|null;
+    showRoadLabels?: boolean | null;
     /**
      * If <code>true</code>, the Street View panorama is visible on load.
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
     /**
      * The zoom of the panorama, specified as a number. A zoom of 0 gives a 180
      * degrees Field of View.
      */
-    zoom?: number|null;
+    zoom?: number | null;
     /**
      * The enabled/disabled state of the zoom control.
      */
-    zoomControl?: boolean|null;
+    zoomControl?: boolean | null;
     /**
      * The display options for the zoom control.
      */
-    zoomControlOptions?: google.maps.ZoomControlOptions|null;
+    zoomControlOptions?: google.maps.ZoomControlOptions | null;
   }
 }
 declare namespace google.maps {
@@ -6058,12 +6062,12 @@ declare namespace google.maps {
      * <code>StreetViewPanoramaData</code> is passed to the provided callback.
      */
     getPanorama(
-        request: google.maps.StreetViewLocationRequest|
+      request: google.maps.StreetViewLocationRequest |
         google.maps.StreetViewPanoRequest,
-        callback?:
-            (a: google.maps.StreetViewPanoramaData|null,
-             b: google.maps.StreetViewStatus) => void):
-        Promise<google.maps.StreetViewResponse>;
+      callback?:
+        (a: google.maps.StreetViewPanoramaData | null,
+          b: google.maps.StreetViewStatus) => void):
+      Promise<google.maps.StreetViewResponse>;
   }
 }
 declare namespace google.maps {
@@ -6130,7 +6134,7 @@ declare namespace google.maps {
      * method must return the URL for the tile image.<br/>
      */
     getTileUrl(pano: string, tileZoom: number, tileX: number, tileY: number):
-        string;
+      string;
     /**
      * The size (in pixels) at which tiles will be rendered.
      */
@@ -6166,24 +6170,24 @@ declare namespace google.maps {
    * Creates a <code>MapType</code> with a custom style.
    */
   class StyledMapType extends google.maps.MVCObject implements
-      google.maps.MapType {
+    google.maps.MapType {
     /**
      * Creates a <code>MapType</code> with a custom style.
      */
     constructor(
-        styles: (google.maps.MapTypeStyle|null)[]|null,
-        options?: google.maps.StyledMapTypeOptions|null);
+      styles: (google.maps.MapTypeStyle | null)[] | null,
+      options?: google.maps.StyledMapTypeOptions | null);
     alt: string;
     getTile(
-        tileCoord: google.maps.Point|null, zoom: number,
-        ownerDocument: Document|null): Element|null;
+      tileCoord: google.maps.Point | null, zoom: number,
+      ownerDocument: Document | null): Element | null;
     maxZoom: number;
     minZoom: number;
     name: string;
-    projection: google.maps.Projection|null;
+    projection: google.maps.Projection | null;
     radius: number;
-    releaseTile(tile: Element|null): void;
-    tileSize: google.maps.Size|null;
+    releaseTile(tile: Element | null): void;
+    tileSize: google.maps.Size | null;
   }
 }
 declare namespace google.maps {
@@ -6197,21 +6201,21 @@ declare namespace google.maps {
      * Text to display when this <code>MapType</code>&#39;s button is hovered
      * over in the map type control.
      */
-    alt?: string|null;
+    alt?: string | null;
     /**
      * The maximum zoom level for the map when displaying this
      * <code>MapType</code>. Optional.
      */
-    maxZoom?: number|null;
+    maxZoom?: number | null;
     /**
      * The minimum zoom level for the map when displaying this
      * <code>MapType</code>. Optional.
      */
-    minZoom?: number|null;
+    minZoom?: number | null;
     /**
      * The name to display in the map type control.
      */
-    name?: string|null;
+    name?: string | null;
   }
 }
 declare namespace google.maps {
@@ -6227,19 +6231,19 @@ declare namespace google.maps {
      * in the same coordinate system as the symbol&#39;s path.
      * @defaultValue <code>google.maps.Point(0,0)</code>
      */
-    anchor?: google.maps.Point|null;
+    anchor?: google.maps.Point | null;
     /**
      * The symbol&#39;s fill color. All CSS3 colors are supported except for
      * extended named colors. For symbol markers, this defaults to
      * &#39;black&#39;. For symbols on polylines, this defaults to the stroke
      * color of the corresponding polyline.
      */
-    fillColor?: string|null;
+    fillColor?: string | null;
     /**
      * The symbol&#39;s fill opacity.
      * @defaultValue <code>0</code>
      */
-    fillOpacity?: number|null;
+    fillOpacity?: number | null;
     /**
      * The origin of the label relative to the origin of the path, if label is
      * supplied by the marker. The origin is expressed in the same coordinate
@@ -6247,14 +6251,14 @@ declare namespace google.maps {
      * polylines.
      * @defaultValue <code>google.maps.Point(0,0)</code>
      */
-    labelOrigin?: google.maps.Point|null;
+    labelOrigin?: google.maps.Point | null;
     /**
      * The symbol&#39;s path, which is a built-in symbol path, or a custom path
      * expressed using <a
      * href="http://www.w3.org/TR/SVG/paths.html#PathData">SVG path
      * notation</a>. Required.
      */
-    path: google.maps.SymbolPath|string;
+    path: google.maps.SymbolPath | string;
     /**
      * The angle by which to rotate the symbol, expressed clockwise in degrees.
      * A symbol in an <code>IconSequence</code> where <code>fixedRotation</code>
@@ -6262,7 +6266,7 @@ declare namespace google.maps {
      * which it lies.
      * @defaultValue <code>0</code>
      */
-    rotation?: number|null;
+    rotation?: number | null;
     /**
      * The amount by which the symbol is scaled in size. For symbol markers,
      * this defaults to 1; after scaling, the symbol may be of any size. For
@@ -6270,25 +6274,25 @@ declare namespace google.maps {
      * polyline; after scaling, the symbol must lie inside a square 22 pixels in
      * size centered at the symbol&#39;s anchor.
      */
-    scale?: number|null;
+    scale?: number | null;
     /**
      * The symbol&#39;s stroke color. All CSS3 colors are supported except for
      * extended named colors. For symbol markers, this defaults to
      * &#39;black&#39;. For symbols on a polyline, this defaults to the stroke
      * color of the polyline.
      */
-    strokeColor?: string|null;
+    strokeColor?: string | null;
     /**
      * The symbol&#39;s stroke opacity. For symbol markers, this defaults to 1.
      * For symbols on a polyline, this defaults to the stroke opacity of the
      * polyline.
      */
-    strokeOpacity?: number|null;
+    strokeOpacity?: number | null;
     /**
      * The symbol&#39;s stroke weight.
      * @defaultValue The {@link google.maps.Symbol.scale} of the symbol.
      */
-    strokeWeight?: number|null;
+    strokeWeight?: number | null;
   }
 }
 declare namespace google.maps {
@@ -6350,17 +6354,17 @@ declare namespace google.maps {
     /**
      * A traffic layer.
      */
-    constructor(opts?: google.maps.TrafficLayerOptions|null);
+    constructor(opts?: google.maps.TrafficLayerOptions | null);
     /**
      * Returns the map on which this layer is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Renders the layer on the specified map. If map is set to
      * <code>null</code>, the layer will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.TrafficLayerOptions|null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.TrafficLayerOptions | null): void;
   }
 }
 declare namespace google.maps {
@@ -6374,11 +6378,11 @@ declare namespace google.maps {
      * automatically.
      * @defaultValue <code>true</code>
      */
-    autoRefresh?: boolean|null;
+    autoRefresh?: boolean | null;
     /**
      * Map on which to display the traffic layer.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
   }
 }
 declare namespace google.maps {
@@ -6500,12 +6504,12 @@ declare namespace google.maps {
     /**
      * Returns the map on which this layer is displayed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Renders the layer on the specified map. If map is set to
      * <code>null</code>, the layer will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
   }
 }
 declare namespace google.maps {
@@ -6516,7 +6520,7 @@ declare namespace google.maps {
     /**
      * The transit agency that operates this transit line.
      */
-    agencies: (google.maps.TransitAgency|null)[]|null;
+    agencies: (google.maps.TransitAgency | null)[] | null;
     /**
      * The color commonly used in signage for this transit line, represented as
      * a hex string.
@@ -6591,25 +6595,25 @@ declare namespace google.maps {
      * Date object measures time in milliseconds since 1 January 1970. If
      * arrival time is specified, departure time is ignored.
      */
-    arrivalTime?: Date|null;
+    arrivalTime?: Date | null;
     /**
      * The desired departure time for the route, specified as a Date object. The
      * Date object measures time in milliseconds since 1 January 1970. If
      * neither departure time nor arrival time is specified, the time is assumed
      * to be &quot;now&quot;.
      */
-    departureTime?: Date|null;
+    departureTime?: Date | null;
     /**
      * One or more preferred modes of transit, such as bus or train. If no
      * preference is given, the API returns the default best route.
      */
-    modes?: google.maps.TransitMode[]|null;
+    modes?: google.maps.TransitMode[] | null;
     /**
      * A preference that can bias the choice of transit route, such as less
      * walking. If no preference is given, the API returns the default best
      * route.
      */
-    routingPreference?: google.maps.TransitRoutePreference|null;
+    routingPreference?: google.maps.TransitRoutePreference | null;
   }
 }
 declare namespace google.maps {
@@ -6858,7 +6862,7 @@ declare namespace google.maps {
    * added to a vector map having a {@link google.maps.MapOptions.mapId}.
    */
   class WebGLOverlayView extends google.maps.MVCObject {
-    getMap(): google.maps.Map|null|undefined;
+    getMap(): google.maps.Map | null | undefined;
     /**
      * Implement this method to fetch or create intermediate data structures
      * before the overlay is drawn that don’t require immediate access to the
@@ -6909,7 +6913,7 @@ declare namespace google.maps {
      * Adds the overlay to the map.
      * @param map The map to access the div, model and view state.
      */
-    setMap(map?: google.maps.Map|null): void;
+    setMap(map?: google.maps.Map | null): void;
   }
 }
 declare namespace google.maps {
@@ -6932,7 +6936,7 @@ declare namespace google.maps {
      * Position id. Used to specify the position of the control on the map. The
      * default position is <code>TOP_LEFT</code>.
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps.drawing {
@@ -6952,12 +6956,12 @@ declare namespace google.maps.drawing {
      * google.maps.drawing.OverlayType.CIRCLE}, {@link
      * google.maps.drawing.OverlayType.POLYGON}]</code>
      */
-    drawingModes?: google.maps.drawing.OverlayType[]|null;
+    drawingModes?: google.maps.drawing.OverlayType[] | null;
     /**
      * Position id. Used to specify the position of the control on the map.
      * @defaultValue {@link google.maps.ControlPosition.TOP_LEFT}
      */
-    position?: google.maps.ControlPosition|null;
+    position?: google.maps.ControlPosition | null;
   }
 }
 declare namespace google.maps.drawing {
@@ -6974,17 +6978,17 @@ declare namespace google.maps.drawing {
      * defines the type of overlay that will be created by the user. Adds a
      * control to the map, allowing the user to switch drawing mode.
      */
-    constructor(options?: google.maps.drawing.DrawingManagerOptions|null);
+    constructor(options?: google.maps.drawing.DrawingManagerOptions | null);
     /**
      * Returns the <code>DrawingManager</code>&#39;s drawing mode.
      */
-    getDrawingMode(): google.maps.drawing.OverlayType|null;
+    getDrawingMode(): google.maps.drawing.OverlayType | null;
     /**
      * Returns the <code>Map</code> to which the <code>DrawingManager</code> is
      * attached, which is the <code>Map</code> on which the overlays created
      * will be placed.
      */
-    getMap(): google.maps.Map|null;
+    getMap(): google.maps.Map | null;
     /**
      * Changes the <code>DrawingManager</code>&#39;s drawing mode, which defines
      * the type of overlay to be added on the map. Accepted values are
@@ -6993,16 +6997,16 @@ declare namespace google.maps.drawing {
      * drawing mode of <code>null</code> means that the user can interact with
      * the map as normal, and clicks do not draw anything.
      */
-    setDrawingMode(drawingMode: google.maps.drawing.OverlayType|null): void;
+    setDrawingMode(drawingMode: google.maps.drawing.OverlayType | null): void;
     /**
      * Attaches the <code>DrawingManager</code> object to the specified
      * <code>Map</code>.
      */
-    setMap(map: google.maps.Map|null): void;
+    setMap(map: google.maps.Map | null): void;
     /**
      * Sets the <code>DrawingManager</code>&#39;s options.
      */
-    setOptions(options: google.maps.drawing.DrawingManagerOptions|null): void;
+    setOptions(options: google.maps.drawing.DrawingManagerOptions | null): void;
   }
 }
 declare namespace google.maps.drawing {
@@ -7017,16 +7021,16 @@ declare namespace google.maps.drawing {
      * property of a new circle is always set to the
      * <code>DrawingManager</code>&#39;s map.
      */
-    circleOptions?: google.maps.CircleOptions|null;
+    circleOptions?: google.maps.CircleOptions | null;
     /**
      * The enabled/disabled state of the drawing control.
      * @defaultValue <code>true</code>
      */
-    drawingControl?: boolean|null;
+    drawingControl?: boolean | null;
     /**
      * The display options for the drawing control.
      */
-    drawingControlOptions?: google.maps.drawing.DrawingControlOptions|null;
+    drawingControlOptions?: google.maps.drawing.DrawingControlOptions | null;
     /**
      * The <code>DrawingManager</code>&#39;s drawing mode, which defines the
      * type of overlay to be added on the map. Accepted values are
@@ -7035,41 +7039,41 @@ declare namespace google.maps.drawing {
      * drawing mode of <code>null</code> means that the user can interact with
      * the map as normal, and clicks do not draw anything.
      */
-    drawingMode?: google.maps.drawing.OverlayType|null;
+    drawingMode?: google.maps.drawing.OverlayType | null;
     /**
      * The <code>Map</code> to which the <code>DrawingManager</code> is
      * attached, which is the <code>Map</code> on which the overlays created
      * will be placed.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * Options to apply to any new markers created with this
      * <code>DrawingManager</code>. The <code>position</code> property is
      * ignored, and the <code>map</code> property of a new marker is always set
      * to the <code>DrawingManager</code>&#39;s map.
      */
-    markerOptions?: google.maps.MarkerOptions|null;
+    markerOptions?: google.maps.MarkerOptions | null;
     /**
      * Options to apply to any new polygons created with this
      * <code>DrawingManager</code>. The <code>paths</code> property is ignored,
      * and the <code>map</code> property of a new polygon is always set to the
      * <code>DrawingManager</code>&#39;s map.
      */
-    polygonOptions?: google.maps.PolygonOptions|null;
+    polygonOptions?: google.maps.PolygonOptions | null;
     /**
      * Options to apply to any new polylines created with this
      * <code>DrawingManager</code>. The <code>path</code> property is ignored,
      * and the <code>map</code> property of a new polyline is always set to the
      * <code>DrawingManager</code>&#39;s map.
      */
-    polylineOptions?: google.maps.PolylineOptions|null;
+    polylineOptions?: google.maps.PolylineOptions | null;
     /**
      * Options to apply to any new rectangles created with this
      * <code>DrawingManager</code>. The <code>bounds</code> property is ignored,
      * and the <code>map</code> property of a new rectangle is always set to the
      * <code>DrawingManager</code>&#39;s map.
      */
-    rectangleOptions?: google.maps.RectangleOptions|null;
+    rectangleOptions?: google.maps.RectangleOptions | null;
   }
 }
 declare namespace google.maps.drawing {
@@ -7081,8 +7085,8 @@ declare namespace google.maps.drawing {
     /**
      * The completed overlay.
      */
-    overlay: google.maps.Marker|null|google.maps.Polygon|
-        google.maps.Polyline|google.maps.Rectangle|google.maps.Circle;
+    overlay: google.maps.Marker | null | google.maps.Polygon |
+    google.maps.Polyline | google.maps.Rectangle | google.maps.Circle;
     /**
      * The completed overlay&#39;s type.
      */
@@ -7138,8 +7142,8 @@ declare namespace google.maps.event {
    *     to decommission it.
    */
   function addDomListener(
-      instance: object, eventName: string, handler: Function,
-      capture?: boolean): google.maps.MapsEventListener;
+    instance: object, eventName: string, handler: Function,
+    capture?: boolean): google.maps.MapsEventListener;
 }
 declare namespace google.maps.event {
   /**
@@ -7152,8 +7156,8 @@ declare namespace google.maps.event {
    *     to decommission it.
    */
   function addDomListenerOnce(
-      instance: object, eventName: string, handler: Function,
-      capture?: boolean): google.maps.MapsEventListener;
+    instance: object, eventName: string, handler: Function,
+    capture?: boolean): google.maps.MapsEventListener;
 }
 declare namespace google.maps.event {
   /**
@@ -7162,7 +7166,7 @@ declare namespace google.maps.event {
    * with removeListener().
    */
   function addListener(instance: object, eventName: string, handler: Function):
-      google.maps.MapsEventListener;
+    google.maps.MapsEventListener;
 }
 declare namespace google.maps.event {
   /**
@@ -7170,8 +7174,8 @@ declare namespace google.maps.event {
    * event.
    */
   function addListenerOnce(
-      instance: object, eventName: string,
-      handler: Function): google.maps.MapsEventListener;
+    instance: object, eventName: string,
+    handler: Function): google.maps.MapsEventListener;
 }
 declare namespace google.maps.event {
   /**
@@ -7205,7 +7209,7 @@ declare namespace google.maps.event {
    * arguments to the listeners.
    */
   function trigger(
-      instance: object, eventName: string, ...eventArgs: any[]): void;
+    instance: object, eventName: string, ...eventArgs: any[]): void;
 }
 declare namespace google.maps.geometry.encoding {
   /**
@@ -7218,17 +7222,17 @@ declare namespace google.maps.geometry.encoding {
    * Encodes a sequence of LatLngs into an encoded path string.
    */
   function encodePath(
-      path: (google.maps.LatLng|google.maps.LatLngLiteral)[]|
-      google.maps.MVCArray<google.maps.LatLng|google.maps.LatLngLiteral>):
-      string;
+    path: (google.maps.LatLng | google.maps.LatLngLiteral)[] |
+      google.maps.MVCArray<google.maps.LatLng | google.maps.LatLngLiteral>):
+    string;
 }
 declare namespace google.maps.geometry.poly {
   /**
    * Computes whether the given point lies inside the specified polygon.
    */
   function containsLocation(
-      point: google.maps.LatLng|google.maps.LatLngLiteral,
-      polygon: google.maps.Polygon): boolean;
+    point: google.maps.LatLng | google.maps.LatLngLiteral,
+    polygon: google.maps.Polygon): boolean;
 }
 declare namespace google.maps.geometry.poly {
   /**
@@ -7239,9 +7243,9 @@ declare namespace google.maps.geometry.poly {
    * tolerance defaults to 10<sup>-9</sup> degrees.
    */
   function isLocationOnEdge(
-      point: google.maps.LatLng|google.maps.LatLngLiteral,
-      poly: google.maps.Polygon|google.maps.Polyline,
-      tolerance?: number): boolean;
+    point: google.maps.LatLng | google.maps.LatLngLiteral,
+    poly: google.maps.Polygon | google.maps.Polyline,
+    tolerance?: number): boolean;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7250,9 +7254,9 @@ declare namespace google.maps.geometry.spherical {
    * which case the area is in square meters.
    */
   function computeArea(
-      path: (google.maps.LatLng|google.maps.LatLngLiteral)[]|
-      google.maps.MVCArray<google.maps.LatLng|google.maps.LatLngLiteral>,
-      radius?: number): number;
+    path: (google.maps.LatLng | google.maps.LatLngLiteral)[] |
+      google.maps.MVCArray<google.maps.LatLng | google.maps.LatLngLiteral>,
+    radius?: number): number;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7260,9 +7264,9 @@ declare namespace google.maps.geometry.spherical {
    * specify a custom radius. The radius defaults to the radius of the Earth.
    */
   function computeDistanceBetween(
-      from: google.maps.LatLng|google.maps.LatLngLiteral,
-      to: google.maps.LatLng|google.maps.LatLngLiteral,
-      radius?: number): number;
+    from: google.maps.LatLng | google.maps.LatLngLiteral,
+    to: google.maps.LatLng | google.maps.LatLngLiteral,
+    radius?: number): number;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7270,17 +7274,17 @@ declare namespace google.maps.geometry.spherical {
    * expressed in degrees clockwise from North within the range [-180,180).
    */
   function computeHeading(
-      from: google.maps.LatLng|google.maps.LatLngLiteral,
-      to: google.maps.LatLng|google.maps.LatLngLiteral): number;
+    from: google.maps.LatLng | google.maps.LatLngLiteral,
+    to: google.maps.LatLng | google.maps.LatLngLiteral): number;
 }
 declare namespace google.maps.geometry.spherical {
   /**
    * Returns the length of the given path.
    */
   function computeLength(
-      path: (google.maps.LatLng|google.maps.LatLngLiteral)[]|
-      google.maps.MVCArray<google.maps.LatLng|google.maps.LatLngLiteral>,
-      radius?: number): number;
+    path: (google.maps.LatLng | google.maps.LatLngLiteral)[] |
+      google.maps.MVCArray<google.maps.LatLng | google.maps.LatLngLiteral>,
+    radius?: number): number;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7288,8 +7292,8 @@ declare namespace google.maps.geometry.spherical {
    * specified heading (expressed in degrees clockwise from north).
    */
   function computeOffset(
-      from: google.maps.LatLng|google.maps.LatLngLiteral, distance: number,
-      heading: number, radius?: number): google.maps.LatLng;
+    from: google.maps.LatLng | google.maps.LatLngLiteral, distance: number,
+    heading: number, radius?: number): google.maps.LatLng;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7299,8 +7303,8 @@ declare namespace google.maps.geometry.spherical {
    * solution is available.
    */
   function computeOffsetOrigin(
-      to: google.maps.LatLng|google.maps.LatLngLiteral, distance: number,
-      heading: number, radius?: number): google.maps.LatLng|null;
+    to: google.maps.LatLng | google.maps.LatLngLiteral, distance: number,
+    heading: number, radius?: number): google.maps.LatLng | null;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7310,9 +7314,9 @@ declare namespace google.maps.geometry.spherical {
    * meters, in which case the area is in square meters.
    */
   function computeSignedArea(
-      loop: (google.maps.LatLng|google.maps.LatLngLiteral)[]|
-      google.maps.MVCArray<google.maps.LatLng|google.maps.LatLngLiteral>,
-      radius?: number): number;
+    loop: (google.maps.LatLng | google.maps.LatLngLiteral)[] |
+      google.maps.MVCArray<google.maps.LatLng | google.maps.LatLngLiteral>,
+    radius?: number): number;
 }
 declare namespace google.maps.geometry.spherical {
   /**
@@ -7320,9 +7324,9 @@ declare namespace google.maps.geometry.spherical {
    * origin LatLng and the destination LatLng.
    */
   function interpolate(
-      from: google.maps.LatLng|google.maps.LatLngLiteral,
-      to: google.maps.LatLng|google.maps.LatLngLiteral,
-      fraction: number): google.maps.LatLng;
+    from: google.maps.LatLng | google.maps.LatLngLiteral,
+    to: google.maps.LatLng | google.maps.LatLngLiteral,
+    fraction: number): google.maps.LatLng;
 }
 declare namespace google.maps.journeySharing {
   /**
@@ -7350,27 +7354,27 @@ declare namespace google.maps.journeySharing {
      * When provided, the minted token should have a private
      * <code>DeliveryVehicleId</code> claim for the provided deliveryVehicleId.
      */
-    deliveryVehicleId?: string|null;
+    deliveryVehicleId?: string | null;
     /**
      * When provided, the minted token should have a private <code>TaskId</code>
      * claim for the provided taskId.
      */
-    taskId?: string|null;
+    taskId?: string | null;
     /**
      * When provided, the minted token should have a private
      * <code>TrackingId</code> claim for the provided trackingId.
      */
-    trackingId?: string|null;
+    trackingId?: string | null;
     /**
      * When provided, the minted token should have a private <code>TripId</code>
      * claim for the provided tripId.
      */
-    tripId?: string|null;
+    tripId?: string | null;
     /**
      * When provided, the minted token should have a private
      * <code>VehicleId</code> claim for the provided vehicleId.
      */
-    vehicleId?: string|null;
+    vehicleId?: string | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7378,8 +7382,8 @@ declare namespace google.maps.journeySharing {
    * Available only in the v=beta channel: https://goo.gle/3oAthT3.
    */
   type AuthTokenFetcher =
-      (a: google.maps.journeySharing.AuthTokenFetcherOptions) =>
-          Promise<google.maps.journeySharing.AuthToken>;
+    (a: google.maps.journeySharing.AuthTokenFetcherOptions) =>
+      Promise<google.maps.journeySharing.AuthToken>;
 }
 declare namespace google.maps.journeySharing {
   /**
@@ -7452,37 +7456,37 @@ declare namespace google.maps.journeySharing {
     /**
      * The location where the current route segment ends.
      */
-    currentRouteSegmentEndPoint: google.maps.LatLngLiteral|null;
+    currentRouteSegmentEndPoint: google.maps.LatLngLiteral | null;
     /**
      * The last reported location of the delivery vehicle.
      */
     latestVehicleLocationUpdate:
-        google.maps.journeySharing.VehicleLocationUpdate|null;
+    google.maps.journeySharing.VehicleLocationUpdate | null;
     /**
      * In the format
      * &quot;providers/{provider_id}/deliveryVehicles/{delivery_vehicle_id}&quot;.
      * The delivery_vehicle_id must be a unique identifier.
      */
-    name: string|null;
+    name: string | null;
     /**
      * The current navigation status of the vehicle.
      */
-    navigationStatus: string|null;
+    navigationStatus: string | null;
     /**
      * The remaining driving distance in the current route segment, in meters.
      */
-    remainingDistanceMeters: number|null;
+    remainingDistanceMeters: number | null;
     /**
      * The remaining driving duration in the current route segment, in
      * milliseconds.
      */
-    remainingDurationMillis: number|null;
+    remainingDurationMillis: number | null;
     /**
      * The journey segments assigned to this delivery vehicle, starting from the
      * vehicle&#39;s most recently reported location.
      */
     remainingVehicleJourneySegments:
-        google.maps.journeySharing.VehicleJourneySegment[]|null;
+    google.maps.journeySharing.VehicleJourneySegment[] | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7491,7 +7495,7 @@ declare namespace google.maps.journeySharing {
    * Delivery Fleet Location Provider.
    */
   class FleetEngineDeliveryFleetLocationProvider extends
-      google.maps.journeySharing.LocationProvider {
+    google.maps.journeySharing.LocationProvider {
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * Delivery Fleet Location Provider.
@@ -7500,19 +7504,19 @@ declare namespace google.maps.journeySharing {
      *     <p>Options to pass to the location provider.
      */
     constructor(options: google.maps.journeySharing
-                    .FleetEngineDeliveryFleetLocationProviderOptions);
+      .FleetEngineDeliveryFleetLocationProviderOptions);
     /**
      * The filter options to apply when fetching the delivery vehicles.
      */
     deliveryVehicleFilterOptions?:
-        google.maps.journeySharing.FleetEngineDeliveryVehicleFilterOptions|null;
+      google.maps.journeySharing.FleetEngineDeliveryVehicleFilterOptions | null;
     /**
      * The bounds to which the delivery vehicle locations will be limited. Set
      * this field to limit the vehicles shown to the specified bounds. If no
      * bounds are set, all delivery vehicles will be shown.
      */
-    locationRestriction?: google.maps.LatLngBounds|null|
-        google.maps.LatLngBoundsLiteral;
+    locationRestriction?: google.maps.LatLngBounds | null |
+      google.maps.LatLngBoundsLiteral;
     /**
      * Minimum time between fetching location updates in milliseconds. If it
      * takes longer than <code>pollingIntervalMillis</code> to fetch a location
@@ -7523,7 +7527,7 @@ declare namespace google.maps.journeySharing {
      * milliseconds, the minimum interval. If you set the polling interval to a
      * lower non-zero value, 5000 is used.
      */
-    pollingIntervalMillis: number|null;
+    pollingIntervalMillis: number | null;
     /**
      * This Field is read-only. Threshold for stale vehicle location. If the
      * last updated location for the vehicle is older than this threshold, the
@@ -7542,20 +7546,20 @@ declare namespace google.maps.journeySharing {
      * Provides JSON Web Tokens for authenticating the client to Fleet Engine.
      */
     authTokenFetcher(
-        this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
-        Promise<google.maps.journeySharing.AuthToken>;
+      this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
+      Promise<google.maps.journeySharing.AuthToken>;
     /**
      * Filter options to apply when fetching the delivery vehicles.
      */
     deliveryVehicleFilterOptions:
-        google.maps.journeySharing.FleetEngineDeliveryVehicleFilterOptions|null;
+    google.maps.journeySharing.FleetEngineDeliveryVehicleFilterOptions | null;
     /**
      * A filter to limit the queries to be within the given latitude/longitude
      * bounds. If no bounds are specified, all delivery vehicles will be
      * displayed.
      */
-    locationRestriction: google.maps.LatLngBounds|null|
-        google.maps.LatLngBoundsLiteral;
+    locationRestriction: google.maps.LatLngBounds | null |
+    google.maps.LatLngBoundsLiteral;
     /**
      * The consumer&#39;s project ID from Google Cloud Console.
      */
@@ -7567,7 +7571,7 @@ declare namespace google.maps.journeySharing {
      * or <i>Infinity</i>, the threshold will be ignored and the vehicle
      * location will not be considered stale.
      */
-    staleLocationThresholdMillis: number|null;
+    staleLocationThresholdMillis: number | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7580,7 +7584,7 @@ declare namespace google.maps.journeySharing {
     /**
      * The list of delivery vehicles returned by the query. Unmodifiable.
      */
-    deliveryVehicles: google.maps.journeySharing.DeliveryVehicle[]|null;
+    deliveryVehicles: google.maps.journeySharing.DeliveryVehicle[] | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7593,7 +7597,7 @@ declare namespace google.maps.journeySharing {
      * Custom attributes that the delivery vehicles must have. Values must be
      * strings or an error will be generated.
      */
-    requiredAttributes: {[key: string]: string}|null;
+    requiredAttributes: { [key: string]: string } | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7602,7 +7606,7 @@ declare namespace google.maps.journeySharing {
    * Delivery Vehicle Location Provider.
    */
   class FleetEngineDeliveryVehicleLocationProvider extends
-      google.maps.journeySharing.LocationProvider {
+    google.maps.journeySharing.LocationProvider {
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * Delivery Vehicle Location Provider.
@@ -7611,7 +7615,7 @@ declare namespace google.maps.journeySharing {
      *     <p>Options to pass to the location provider.
      */
     constructor(options: google.maps.journeySharing
-                    .FleetEngineDeliveryVehicleLocationProviderOptions);
+      .FleetEngineDeliveryVehicleLocationProviderOptions);
     /**
      * ID for the vehicle that this location provider observes. Set this field
      * to track a vehicle.
@@ -7620,11 +7624,11 @@ declare namespace google.maps.journeySharing {
     /**
      * Optionally allow users to display the task&#39;s outcome location.
      */
-    shouldShowOutcomeLocations: boolean|null;
+    shouldShowOutcomeLocations: boolean | null;
     /**
      * Optionally allow users to display fetched tasks.
      */
-    shouldShowTasks: boolean|null;
+    shouldShowTasks: boolean | null;
     /**
      * This Field is read-only. Threshold for stale vehicle location. If the
      * last updated location for the vehicle is older than this threshold, the
@@ -7647,12 +7651,12 @@ declare namespace google.maps.journeySharing {
      * Provides JSON Web Tokens for authenticating the client to Fleet Engine.
      */
     authTokenFetcher(
-        this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
-        Promise<google.maps.journeySharing.AuthToken>;
+      this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
+      Promise<google.maps.journeySharing.AuthToken>;
     /**
      * The delivery vehicle ID to track initially.
      */
-    deliveryVehicleId: string|null;
+    deliveryVehicleId: string | null;
     /**
      * Minimum time between fetching location updates in milliseconds. If it
      * takes longer than <code>pollingIntervalMillis</code> to fetch a location
@@ -7663,7 +7667,7 @@ declare namespace google.maps.journeySharing {
      * milliseconds, the minimum interval. If you set the polling interval to a
      * lower non-zero value, 5000 is used.
      */
-    pollingIntervalMillis: number|null;
+    pollingIntervalMillis: number | null;
     /**
      * The consumer&#39;s project ID from Google Cloud Console.
      */
@@ -7671,13 +7675,13 @@ declare namespace google.maps.journeySharing {
     /**
      * Boolean to show or hide outcome locations for the fetched tasks.
      */
-    shouldShowOutcomeLocations: boolean|null;
+    shouldShowOutcomeLocations: boolean | null;
     /**
      * Boolean to show or hide tasks. Setting this to false will prevent the
      * ListTasks endpoint from being called to fetch the tasks. Only the
      * upcoming vehicle stops will be displayed.
      */
-    shouldShowTasks: boolean|null;
+    shouldShowTasks: boolean | null;
     /**
      * Threshold for stale vehicle location. If the last updated location for
      * the vehicle is older this threshold, the vehicle will not be displayed.
@@ -7685,13 +7689,13 @@ declare namespace google.maps.journeySharing {
      * <i>Infinity</i>, the threshold will be ignored and the vehicle location
      * will not be considered stale.
      */
-    staleLocationThresholdMillis: number|null;
+    staleLocationThresholdMillis: number | null;
     /**
      * Filter options to apply when fetching tasks. The options can include
      * specific vehicle, time, and task status.
      */
-    taskFilterOptions: google.maps.journeySharing.FleetEngineTaskFilterOptions|
-        null;
+    taskFilterOptions: google.maps.journeySharing.FleetEngineTaskFilterOptions |
+    null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7706,15 +7710,15 @@ declare namespace google.maps.journeySharing {
      * Unmodifiable.
      */
     completedVehicleJourneySegments:
-        google.maps.journeySharing.VehicleJourneySegment[]|null;
+    google.maps.journeySharing.VehicleJourneySegment[] | null;
     /**
      * The delivery vehicle data structure returned by the update. Unmodifiable.
      */
-    deliveryVehicle: google.maps.journeySharing.DeliveryVehicle|null;
+    deliveryVehicle: google.maps.journeySharing.DeliveryVehicle | null;
     /**
      * The list of tasks served by this delivery vehicle. Unmodifiable.
      */
-    tasks: google.maps.journeySharing.Task[]|null;
+    tasks: google.maps.journeySharing.Task[] | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7747,7 +7751,7 @@ declare namespace google.maps.journeySharing {
    * Shipment location provider.
    */
   class FleetEngineShipmentLocationProvider extends
-      google.maps.journeySharing.LocationProvider {
+    google.maps.journeySharing.LocationProvider {
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * Shipment location provider.
@@ -7756,11 +7760,11 @@ declare namespace google.maps.journeySharing {
      *     <p>Options for the location provider.
      */
     constructor(options: google.maps.journeySharing
-                    .FleetEngineShipmentLocationProviderOptions);
+      .FleetEngineShipmentLocationProviderOptions);
     /**
      * Returns the currently tracked task.
      */
-    getTask(): google.maps.journeySharing.Task|null;
+    getTask(): google.maps.journeySharing.Task | null;
     /**
      * Explicitly refreshes the tracked location.
      */
@@ -7782,8 +7786,8 @@ declare namespace google.maps.journeySharing {
      * Provides JSON Web Tokens for authenticating the client to Fleet Engine.
      */
     authTokenFetcher(
-        this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
-        Promise<google.maps.journeySharing.AuthToken>;
+      this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
+      Promise<google.maps.journeySharing.AuthToken>;
     /**
      * Minimum time between fetching location updates in milliseconds. If it
      * takes longer than <code>pollingIntervalMillis</code> to fetch a location
@@ -7794,7 +7798,7 @@ declare namespace google.maps.journeySharing {
      * milliseconds, the minimum interval. If you set the polling interval to a
      * lower non-zero value, 5000 is used.
      */
-    pollingIntervalMillis: number|null;
+    pollingIntervalMillis: number | null;
     /**
      * The consumer&#39;s project ID from Google Cloud Console.
      */
@@ -7814,7 +7818,7 @@ declare namespace google.maps.journeySharing {
     /**
      * The task structure returned by the update. Unmodifiable.
      */
-    task: google.maps.journeySharing.Task|null;
+    task: google.maps.journeySharing.Task | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7827,16 +7831,16 @@ declare namespace google.maps.journeySharing {
      * Exclusive lower bound for the completion time of the task. Used to filter
      * for tasks that were completed after the specified time.
      */
-    completionTimeFrom: Date|null;
+    completionTimeFrom: Date | null;
     /**
      * Exclusive upper bound for the completion time of the task. Used to filter
      * for tasks that were completed before the specified time.
      */
-    completionTimeTo: Date|null;
+    completionTimeTo: Date | null;
     /**
      * The state of the task. Valid values are OPEN or CLOSED.
      */
-    state: string|null;
+    state: string | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7845,7 +7849,7 @@ declare namespace google.maps.journeySharing {
    * Trip location provider.
    */
   class FleetEngineTripLocationProvider extends
-      google.maps.journeySharing.LocationProvider {
+    google.maps.journeySharing.LocationProvider {
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * Trip location provider.
@@ -7854,7 +7858,7 @@ declare namespace google.maps.journeySharing {
      *     <p>Options for the location provider.
      */
     constructor(options: google.maps.journeySharing
-                    .FleetEngineTripLocationProviderOptions);
+      .FleetEngineTripLocationProviderOptions);
     /**
      * Explicitly refreshes the tracked location.
      */
@@ -7876,8 +7880,8 @@ declare namespace google.maps.journeySharing {
      * Provides JSON Web Tokens for authenticating the client to Fleet Engine.
      */
     authTokenFetcher(
-        this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
-        Promise<google.maps.journeySharing.AuthToken>;
+      this: any, a: google.maps.journeySharing.AuthTokenFetcherOptions):
+      Promise<google.maps.journeySharing.AuthToken>;
     /**
      * Minimum time between fetching location updates in milliseconds. If it
      * takes longer than <code>pollingIntervalMillis</code> to fetch a location
@@ -7888,7 +7892,7 @@ declare namespace google.maps.journeySharing {
      * milliseconds, the minimum interval. If you set the polling interval to a
      * lower non-zero value, 5000 is used.
      */
-    pollingIntervalMillis: number|null;
+    pollingIntervalMillis: number | null;
     /**
      * The consumer&#39;s project ID from Google Cloud Console.
      */
@@ -7908,7 +7912,7 @@ declare namespace google.maps.journeySharing {
     /**
      * The trip structure returned by the update. Unmodifiable.
      */
-    trip: google.maps.journeySharing.Trip|null;
+    trip: google.maps.journeySharing.Trip | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -7925,7 +7929,7 @@ declare namespace google.maps.journeySharing {
      *     for the map view.
      */
     constructor(options:
-                    google.maps.journeySharing.JourneySharingMapViewOptions);
+      google.maps.journeySharing.JourneySharingMapViewOptions);
     /**
      * Configures options for an anticipated route polyline. Invoked whenever a
      * new anticipated route polyline is rendered. <p>If specifying a function,
@@ -7942,9 +7946,9 @@ declare namespace google.maps.journeySharing {
      * polylineOptions.path will be ignored.
      */
     anticipatedRoutePolylineSetup:
-        google.maps.journeySharing.PolylineSetupOptions|
-        ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
-             google.maps.journeySharing.PolylineSetupOptions);
+      google.maps.journeySharing.PolylineSetupOptions |
+      ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
+        google.maps.journeySharing.PolylineSetupOptions);
     /**
      * Returns the anticipated route polylines, if any.
      */
@@ -7968,9 +7972,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    destinationMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    destinationMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the destination markers, if any.
      */
@@ -8010,9 +8014,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    originMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    originMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the origin markers, if any.
      */
@@ -8031,9 +8035,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    pingMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    pingMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Configures options for a successful task location marker. Invoked
      * whenever a new successful task marker is rendered. <p>If specifying a
@@ -8049,9 +8053,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    successfulTaskMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    successfulTaskMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the successful task markers, if any.
      */
@@ -8071,9 +8075,9 @@ declare namespace google.maps.journeySharing {
      * polylineOptions.path will be ignored. Any unset or null value will be
      * overwritten with the default.
      */
-    takenRoutePolylineSetup: google.maps.journeySharing.PolylineSetupOptions|
-        ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
-             google.maps.journeySharing.PolylineSetupOptions);
+    takenRoutePolylineSetup: google.maps.journeySharing.PolylineSetupOptions |
+      ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
+        google.maps.journeySharing.PolylineSetupOptions);
     /**
      * Returns the taken route polylines, if any.
      */
@@ -8093,9 +8097,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    taskOutcomeMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    taskOutcomeMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the task outcome markers, if any.
      */
@@ -8115,9 +8119,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    unsuccessfulTaskMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    unsuccessfulTaskMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the unsuccessful task markers, if any.
      */
@@ -8136,9 +8140,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    vehicleMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    vehicleMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the vehicle markers, if any.
      */
@@ -8158,9 +8162,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    waypointMarkerSetup: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions);
+    waypointMarkerSetup: google.maps.journeySharing.MarkerSetupOptions |
+      ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+        google.maps.journeySharing.MarkerSetupOptions);
     /**
      * Returns the waypoint markers, if any.
      */
@@ -8189,17 +8193,17 @@ declare namespace google.maps.journeySharing {
      * polylineOptions.path will be ignored.
      */
     anticipatedRoutePolylineSetup?:
-        google.maps.journeySharing.PolylineSetupOptions|
-        ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
-             google.maps.journeySharing.PolylineSetupOptions)|null;
+    google.maps.journeySharing.PolylineSetupOptions |
+    ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
+      google.maps.journeySharing.PolylineSetupOptions) | null;
     /**
      * Automatic viewport mode. Default value is FIT_ANTICIPATED_ROUTE, which
      * enables the map view to automatically adjust the viewport to fit vehicle
      * markers, location markers, and any visible anticipated route polylines.
      * Set this to NONE to turn off automatic fitting.
      */
-    automaticViewportMode?: google.maps.journeySharing.AutomaticViewportMode|
-        null;
+    automaticViewportMode?: google.maps.journeySharing.AutomaticViewportMode |
+    null;
     /**
      * Configures options for a destination location marker. Invoked whenever a
      * new destination marker is rendered. <p>If specifying a function, the
@@ -8215,9 +8219,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    destinationMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    destinationMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * The DOM element backing the view. Required.
      */
@@ -8230,7 +8234,7 @@ declare namespace google.maps.journeySharing {
     /**
      * Map options passed into the google.maps.Map constructor.
      */
-    mapOptions?: google.maps.MapOptions|null;
+    mapOptions?: google.maps.MapOptions | null;
     /**
      * Configures options for an origin location marker. Invoked whenever a new
      * origin marker is rendered. <p>If specifying a function, the function can
@@ -8245,9 +8249,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    originMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    originMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for a ping location marker. Invoked whenever a new
      * ping marker is rendered. <p>If specifying a function, the function can
@@ -8262,9 +8266,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    pingMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    pingMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for a successful task location marker. Invoked
      * whenever a new successful task marker is rendered. <p>If specifying a
@@ -8280,9 +8284,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    successfulTaskMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    successfulTaskMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for a taken route polyline. Invoked whenever a new
      * taken route polyline is rendered. <p>If specifying a function, the
@@ -8298,9 +8302,9 @@ declare namespace google.maps.journeySharing {
      * polylineOptions.path will be ignored. Any unset or null value will be
      * overwritten with the default.
      */
-    takenRoutePolylineSetup?: google.maps.journeySharing.PolylineSetupOptions|
-        ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
-             google.maps.journeySharing.PolylineSetupOptions)|null;
+    takenRoutePolylineSetup?: google.maps.journeySharing.PolylineSetupOptions |
+    ((a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
+      google.maps.journeySharing.PolylineSetupOptions) | null;
     /**
      * Configures options for a task outcome location marker. Invoked whenever a
      * new task outcome location marker is rendered. <p>If specifying a
@@ -8316,9 +8320,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    taskOutcomeMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    taskOutcomeMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for an unsuccessful task location marker. Invoked
      * whenever a new unsuccessful task marker is rendered. <p>If specifying a
@@ -8334,9 +8338,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    unsuccessfulTaskMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    unsuccessfulTaskMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for a vehicle location marker. Invoked whenever a new
      * vehicle marker is rendered. <p>If specifying a function, the function can
@@ -8351,9 +8355,9 @@ declare namespace google.maps.journeySharing {
      * it will be overwritten with the default. Any value set for
      * markerOptions.map or markerOptions.position will be ignored.
      */
-    vehicleMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    vehicleMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
     /**
      * Configures options for a waypoint location marker. Invoked whenever a new
      * waypoint marker is rendered. <p>If specifying a function, the function
@@ -8369,9 +8373,9 @@ declare namespace google.maps.journeySharing {
      * Any value set for markerOptions.map or markerOptions.position will be
      * ignored.
      */
-    waypointMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions|
-        ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-             google.maps.journeySharing.MarkerSetupOptions)|null;
+    waypointMarkerSetup?: google.maps.journeySharing.MarkerSetupOptions |
+    ((a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions) | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8389,16 +8393,16 @@ declare namespace google.maps.journeySharing {
      * @param handler The event handler.
      */
     addListener(eventName: string, handler: Function):
-        google.maps.MapsEventListener;
+      google.maps.MapsEventListener;
   }
 }
 declare namespace google.maps.journeySharing {
   /**
    * Available only in the v=beta channel: https://goo.gle/3oAthT3.
    */
-  type MarkerSetup = google.maps.journeySharing.MarkerSetupOptions|(
-      (a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
-          google.maps.journeySharing.MarkerSetupOptions);
+  type MarkerSetup = google.maps.journeySharing.MarkerSetupOptions | (
+    (a: google.maps.journeySharing.DefaultMarkerSetupOptions) =>
+      google.maps.journeySharing.MarkerSetupOptions);
 }
 declare namespace google.maps.journeySharing {
   /**
@@ -8409,16 +8413,16 @@ declare namespace google.maps.journeySharing {
     /**
      * Marker options.
      */
-    markerOptions?: google.maps.MarkerOptions|null;
+    markerOptions?: google.maps.MarkerOptions | null;
   }
 }
 declare namespace google.maps.journeySharing {
   /**
    * Available only in the v=beta channel: https://goo.gle/3oAthT3.
    */
-  type PolylineSetup = google.maps.journeySharing.PolylineSetupOptions|(
-      (a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
-          google.maps.journeySharing.PolylineSetupOptions);
+  type PolylineSetup = google.maps.journeySharing.PolylineSetupOptions | (
+    (a: google.maps.journeySharing.DefaultPolylineSetupOptions) =>
+      google.maps.journeySharing.PolylineSetupOptions);
 }
 declare namespace google.maps.journeySharing {
   /**
@@ -8429,11 +8433,11 @@ declare namespace google.maps.journeySharing {
     /**
      * Polyline options.
      */
-    polylineOptions?: google.maps.PolylineOptions|null;
+    polylineOptions?: google.maps.PolylineOptions | null;
     /**
      * Polyline visibility.
      */
-    visible?: boolean|null;
+    visible?: boolean | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8445,12 +8449,12 @@ declare namespace google.maps.journeySharing {
     /**
      * The timestamp of the estimated completion time of the task.
      */
-    estimatedCompletionTime: Date|null;
+    estimatedCompletionTime: Date | null;
     /**
      * Information specific to the last location update.
      */
     latestVehicleLocationUpdate:
-        google.maps.journeySharing.VehicleLocationUpdate|null;
+    google.maps.journeySharing.VehicleLocationUpdate | null;
     /**
      * The task name in the format
      * &quot;providers/{provider_id}/tasks/{task_id}&quot;. The task_id must be
@@ -8458,49 +8462,49 @@ declare namespace google.maps.journeySharing {
      * shipment, use the tracking_id field. Multiple tasks can have the same
      * tracking_id.
      */
-    name: string|null;
+    name: string | null;
     /**
      * The outcome of the task.
      */
-    outcome: string|null;
+    outcome: string | null;
     /**
      * The location where the task was completed (from provider).
      */
-    outcomeLocation: google.maps.LatLngLiteral|null;
+    outcomeLocation: google.maps.LatLngLiteral | null;
     /**
      * The setter of the task outcome location (&#39;PROVIDER&#39; or
      * &#39;LAST_VEHICLE_LOCATION&#39;).
      */
-    outcomeLocationSource: string|null;
+    outcomeLocationSource: string | null;
     /**
      * The timestamp of when the task&#39;s outcome was set (from provider).
      */
-    outcomeTime: Date|null;
+    outcomeTime: Date | null;
     /**
      * The location where the task is to be completed.
      */
-    plannedLocation: google.maps.LatLngLiteral|null;
+    plannedLocation: google.maps.LatLngLiteral | null;
     /**
      * Information about the segments left to be completed for this task.
      */
     remainingVehicleJourneySegments:
-        google.maps.journeySharing.VehicleJourneySegment[]|null;
+    google.maps.journeySharing.VehicleJourneySegment[] | null;
     /**
      * The current execution state of the task.
      */
-    status: string|null;
+    status: string | null;
     /**
      * The tracking ID of the shipment.
      */
-    trackingId: string|null;
+    trackingId: string | null;
     /**
      * The task type; for example, a break or shipment.
      */
-    type: string|null;
+    type: string | null;
     /**
      * The ID of the vehicle performing this task.
      */
-    vehicleId: string|null;
+    vehicleId: string | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8512,64 +8516,64 @@ declare namespace google.maps.journeySharing {
     /**
      * Location where the customer was dropped off.
      */
-    actualDropOffLocation: google.maps.LatLngLiteral|null;
+    actualDropOffLocation: google.maps.LatLngLiteral | null;
     /**
      * Location where the customer was picked up.
      */
-    actualPickupLocation: google.maps.LatLngLiteral|null;
+    actualPickupLocation: google.maps.LatLngLiteral | null;
     /**
      * The estimated future time when the passengers will be dropped off, or the
      * actual time when they were dropped off.
      */
-    dropOffTime: Date|null;
+    dropOffTime: Date | null;
     /**
      * Information specific to the last location update.
      */
     latestVehicleLocationUpdate:
-        google.maps.journeySharing.VehicleLocationUpdate|null;
+    google.maps.journeySharing.VehicleLocationUpdate | null;
     /**
      * In the format &quot;providers/{provider_id}/trips/{trip_id}&quot;. The
      * trip_id must be a unique identifier.
      */
-    name: string|null;
+    name: string | null;
     /**
      * Number of passengers on this trip; does not include the driver.
      */
-    passengerCount: number|null;
+    passengerCount: number | null;
     /**
      * The estimated future time when the passengers will be picked up, or the
      * actual time when they were picked up.
      */
-    pickupTime: Date|null;
+    pickupTime: Date | null;
     /**
      * Location where the customer indicates they will be dropped off.
      */
-    plannedDropOffLocation: google.maps.LatLngLiteral|null;
+    plannedDropOffLocation: google.maps.LatLngLiteral | null;
     /**
      * Location where customer indicates they will be picked up.
      */
-    plannedPickupLocation: google.maps.LatLngLiteral|null;
+    plannedPickupLocation: google.maps.LatLngLiteral | null;
     /**
      * An array of waypoints indicating the path from the current location to
      * the drop-off point.
      */
-    remainingWaypoints: google.maps.journeySharing.VehicleWaypoint[]|null;
+    remainingWaypoints: google.maps.journeySharing.VehicleWaypoint[] | null;
     /**
      * Current status of the trip. Possible values are UNKNOWN_TRIP_STATUS, NEW,
      * ENROUTE_TO_PICKUP, ARRIVED_AT_PICKUP,
      * ARRIVED_AT_INTERMEDIATE_DESTINATION, ENROUTE_TO_INTERMEDIATE_DESTINATION,
      * ENROUTE_TO_DROPOFF, COMPLETE, or CANCELED.
      */
-    status: string|null;
+    status: string | null;
     /**
      * The type of the trip. Possible values are UNKNOWN_TRIP_TYPE, SHARED or
      * EXCLUSIVE.
      */
-    type: string|null;
+    type: string | null;
     /**
      * ID of the vehicle making this trip.
      */
-    vehicleId: string|null;
+    vehicleId: string | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8581,24 +8585,24 @@ declare namespace google.maps.journeySharing {
     /**
      * The travel distance from the previous stop to this stop, in meters.
      */
-    distanceMeters: number|null;
+    distanceMeters: number | null;
     /**
      * The travel time from the previous stop to this stop, in milliseconds.
      */
-    durationMillis: number|null;
+    durationMillis: number | null;
     /**
      * The extra travel time due to the durations of the stop&#39;s tasks, in
      * milliseconds.
      */
-    extraDurationMillis: number|null;
+    extraDurationMillis: number | null;
     /**
      * The actual stop location.
      */
-    location: google.maps.LatLngLiteral|null;
+    location: google.maps.LatLngLiteral | null;
     /**
      * The path from the previous stop to this stop.
      */
-    path: google.maps.LatLngLiteral[]|null;
+    path: google.maps.LatLngLiteral[] | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8610,19 +8614,19 @@ declare namespace google.maps.journeySharing {
     /**
      * The heading of the update. 0 corresponds to north, 180 to south.
      */
-    heading: number|null;
+    heading: number | null;
     /**
      * The location of the update.
      */
-    location: google.maps.LatLngLiteral|null;
+    location: google.maps.LatLngLiteral | null;
     /**
      * The speed in kilometers per hour.
      */
-    speedKilometersPerHour: number|null;
+    speedKilometersPerHour: number | null;
     /**
      * The update time.
      */
-    time: Date|null;
+    time: Date | null;
   }
 }
 declare namespace google.maps.journeySharing {
@@ -8636,23 +8640,23 @@ declare namespace google.maps.journeySharing {
      * current location, if this waypoint is the first in the list of waypoints)
      * to this waypoint in meters.
      */
-    distanceMeters: number|null;
+    distanceMeters: number | null;
     /**
      * Travel time between the previous waypoint (or the vehicle&#39;s current
      * location, if this waypoint is the first in the list of waypoints) to this
      * waypoint in milliseconds.
      */
-    durationMillis: number|null;
+    durationMillis: number | null;
     /**
      * The location of the waypoint.
      */
-    location: google.maps.LatLngLiteral|null;
+    location: google.maps.LatLngLiteral | null;
     /**
      * The path from the previous waypoint (or the vehicle&#39;s current
      * location, if this waypoint is the first in the list of waypoints) to this
      * waypoint.
      */
-    path: google.maps.LatLngLiteral[]|null;
+    path: google.maps.LatLngLiteral[] | null;
   }
 }
 declare namespace google.maps.localContext {
@@ -8660,7 +8664,7 @@ declare namespace google.maps.localContext {
    * Shows a Local Context experience with a {@link google.maps.Map}.
    */
   class LocalContextMapView implements
-      google.maps.localContext.LocalContextMapViewOptions {
+    google.maps.localContext.LocalContextMapViewOptions {
     /**
      * Shows a Local Context experience with a {@link google.maps.Map}.
      */
@@ -8669,17 +8673,17 @@ declare namespace google.maps.localContext {
      * Adds the given listener function to the given event name.
      */
     addListener(eventName: string, handler: Function):
-        google.maps.MapsEventListener;
+      google.maps.MapsEventListener;
     /**
      * See {@link
      * google.maps.localContext.LocalContextMapViewOptions.directionsOptions}.
      */
-    directionsOptions?: null|
-        google.maps.localContext.MapDirectionsOptionsLiteral;
+    directionsOptions?: null |
+      google.maps.localContext.MapDirectionsOptionsLiteral;
     /**
      * The DOM Element backing the view.
      */
-    element?: Element|null;
+    element?: Element | null;
     /**
      * Hides the place details.
      */
@@ -8699,18 +8703,18 @@ declare namespace google.maps.localContext {
      * Changing this property on the <code>LocalContextMapView</code> may
      * trigger a new search.
      */
-    locationBias?: google.maps.LatLng|google.maps.LatLngLiteral|
-        google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|
-        google.maps.Circle|google.maps.CircleLiteral|string|null;
+    locationBias?: google.maps.LatLng | google.maps.LatLngLiteral |
+      google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral |
+      google.maps.Circle | google.maps.CircleLiteral | string | null;
     /**
      * See {@link
      * google.maps.localContext.LocalContextMapViewOptions.locationRestriction}.
      * Changing this property on the <code>LocalContextMapView</code> may
      * trigger a new search.
      */
-    locationRestriction?: google.maps.LatLngBounds|
-        google.maps.LatLngBoundsLiteral|null;
-    map?: google.maps.Map|null;
+    locationRestriction?: google.maps.LatLngBounds |
+      google.maps.LatLngBoundsLiteral | null;
+    map?: google.maps.Map | null;
     /**
      * See {@link
      * google.maps.localContext.LocalContextMapViewOptions.maxPlaceCount}.
@@ -8719,23 +8723,23 @@ declare namespace google.maps.localContext {
      */
     maxPlaceCount: number;
     pinOptionsSetup?:
-        ((a: {isHighlighted: boolean, isSelected: boolean}) =>
-             google.maps.localContext.PinOptions | null |
-             undefined)|google.maps.localContext.PinOptions|null;
+      ((a: { isHighlighted: boolean, isSelected: boolean }) =>
+        google.maps.localContext.PinOptions | null |
+        undefined) | google.maps.localContext.PinOptions | null;
     placeChooserViewSetup?:
-        ((a: {
-           defaultLayoutMode: google.maps.localContext.PlaceChooserLayoutMode,
-           defaultPosition: google.maps.localContext.PlaceChooserPosition|null
-         }) => google.maps.localContext.PlaceChooserViewSetupOptions | null |
-             undefined)|google.maps.localContext.PlaceChooserViewSetupOptions
-        |null;
+      ((a: {
+        defaultLayoutMode: google.maps.localContext.PlaceChooserLayoutMode,
+        defaultPosition: google.maps.localContext.PlaceChooserPosition | null
+      }) => google.maps.localContext.PlaceChooserViewSetupOptions | null |
+        undefined) | google.maps.localContext.PlaceChooserViewSetupOptions
+      | null;
     placeDetailsViewSetup?:
-        ((a: {
-           defaultLayoutMode: google.maps.localContext.PlaceDetailsLayoutMode,
-           defaultPosition: google.maps.localContext.PlaceDetailsPosition|null
-         }) => google.maps.localContext.PlaceDetailsViewSetupOptions | null |
-             undefined)|google.maps.localContext.PlaceDetailsViewSetupOptions
-        |null;
+      ((a: {
+        defaultLayoutMode: google.maps.localContext.PlaceDetailsLayoutMode,
+        defaultPosition: google.maps.localContext.PlaceDetailsPosition | null
+      }) => google.maps.localContext.PlaceDetailsViewSetupOptions | null |
+        undefined) | google.maps.localContext.PlaceDetailsViewSetupOptions
+      | null;
     /**
      * See {@link
      * google.maps.localContext.LocalContextMapViewOptions.placeTypePreferences}.
@@ -8763,25 +8767,25 @@ declare namespace google.maps.localContext {
      * Options for customizing directions. If not set, directions and distance
      * will be disabled.
      */
-    directionsOptions?: null|
-        google.maps.localContext.MapDirectionsOptionsLiteral;
+    directionsOptions?: null |
+    google.maps.localContext.MapDirectionsOptionsLiteral;
     /**
      * The DOM Element backing the view.
      */
-    element?: Element|null;
+    element?: Element | null;
     /**
      * A soft boundary or hint to use when searching for places.
      * @defaultValue <code>null</code>
      */
-    locationBias?: google.maps.LatLng|google.maps.LatLngLiteral|
-        google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|
-        google.maps.Circle|google.maps.CircleLiteral|string|null;
+    locationBias?: google.maps.LatLng | google.maps.LatLngLiteral |
+    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral |
+    google.maps.Circle | google.maps.CircleLiteral | string | null;
     /**
      * Bounds to constrain search results. If not specified, results will be
      * constrained to the map viewport.
      */
-    locationRestriction?: google.maps.LatLngBounds|
-        google.maps.LatLngBoundsLiteral|null;
+    locationRestriction?: google.maps.LatLngBounds |
+    google.maps.LatLngBoundsLiteral | null;
     /**
      * An already instantiated {@link google.maps.Map} instance. If passed in,
      * the map will be moved into the LocalContextMapView&#39;s DOM, and will
@@ -8789,7 +8793,7 @@ declare namespace google.maps.localContext {
      * may also have styles and classes applied to it by the
      * <code>LocalContextMapView</code>.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The maximum number of places to show. When this parameter is 0, the Local
      * Context Library does not load places. [0,24]
@@ -8804,9 +8808,9 @@ declare namespace google.maps.localContext {
      * will be logged to the console).
      */
     pinOptionsSetup?:
-        ((a: {isHighlighted: boolean, isSelected: boolean}) =>
-             google.maps.localContext.PinOptions | null |
-             undefined)|google.maps.localContext.PinOptions|null;
+    ((a: { isHighlighted: boolean, isSelected: boolean }) =>
+      google.maps.localContext.PinOptions | null |
+      undefined) | google.maps.localContext.PinOptions | null;
     /**
      * Overrides the setup of the place chooser view. Pass a function to
      * dynamically override the default setup when the LocalContextMapView might
@@ -8816,12 +8820,12 @@ declare namespace google.maps.localContext {
      * construction will cause errors to be thrown synchronously.
      */
     placeChooserViewSetup?:
-        ((a: {
-           defaultLayoutMode: google.maps.localContext.PlaceChooserLayoutMode,
-           defaultPosition: google.maps.localContext.PlaceChooserPosition|null
-         }) => google.maps.localContext.PlaceChooserViewSetupOptions | null |
-             undefined)|google.maps.localContext.PlaceChooserViewSetupOptions
-        |null;
+    ((a: {
+      defaultLayoutMode: google.maps.localContext.PlaceChooserLayoutMode,
+      defaultPosition: google.maps.localContext.PlaceChooserPosition | null
+    }) => google.maps.localContext.PlaceChooserViewSetupOptions | null |
+      undefined) | google.maps.localContext.PlaceChooserViewSetupOptions
+    | null;
     /**
      * Overrides the setup of the place details view. Pass a function to
      * dynamically override the default setup when the LocalContextMapView might
@@ -8831,12 +8835,12 @@ declare namespace google.maps.localContext {
      * construction will cause errors to be thrown synchronously.
      */
     placeDetailsViewSetup?:
-        ((a: {
-           defaultLayoutMode: google.maps.localContext.PlaceDetailsLayoutMode,
-           defaultPosition: google.maps.localContext.PlaceDetailsPosition|null
-         }) => google.maps.localContext.PlaceDetailsViewSetupOptions | null |
-             undefined)|google.maps.localContext.PlaceDetailsViewSetupOptions
-        |null;
+    ((a: {
+      defaultLayoutMode: google.maps.localContext.PlaceDetailsLayoutMode,
+      defaultPosition: google.maps.localContext.PlaceDetailsPosition | null
+    }) => google.maps.localContext.PlaceDetailsViewSetupOptions | null |
+      undefined) | google.maps.localContext.PlaceDetailsViewSetupOptions
+    | null;
     /**
      * The types of places to search for (up to 10). The type
      * <code>Iterable&lt;string|PlaceTypePreference&gt;</code> is also accepted,
@@ -8852,13 +8856,13 @@ declare namespace google.maps.localContext {
    * google.maps.localContext.LocalContextMapView}.
    */
   class MapDirectionsOptions implements
-      google.maps.localContext.MapDirectionsOptionsLiteral {
+    google.maps.localContext.MapDirectionsOptionsLiteral {
     /**
      * Adds the given listener function to the given event name.
      */
     addListener(eventName: string, handler: Function):
-        google.maps.MapsEventListener;
-    origin: google.maps.LatLng|google.maps.LatLngLiteral;
+      google.maps.MapsEventListener;
+    origin: google.maps.LatLng | google.maps.LatLngLiteral;
   }
 }
 declare namespace google.maps.localContext {
@@ -8873,7 +8877,7 @@ declare namespace google.maps.localContext {
     /**
      * Origin for directions and distance.
      */
-    origin: google.maps.LatLng|google.maps.LatLngLiteral;
+    origin: google.maps.LatLng | google.maps.LatLngLiteral;
   }
 }
 declare namespace google.maps.localContext {
@@ -8884,16 +8888,16 @@ declare namespace google.maps.localContext {
     /**
      * The color of the icon&#39;s shape, can be any valid CSS color.
      */
-    background?: string|null;
+    background?: string | null;
     /**
      * The color of the icon&#39;s glyph, can be any valid CSS color.
      */
-    glyphColor?: string|null;
+    glyphColor?: string | null;
     /**
      * The scale of the icon. The value is absolute, not relative to the default
      * sizes in each state.
      */
-    scale?: number|null;
+    scale?: number | null;
   }
 }
 declare namespace google.maps.localContext {
@@ -8942,12 +8946,12 @@ declare namespace google.maps.localContext {
    * layout and visibility</a>.
    */
   interface PlaceChooserViewSetupOptions {
-    layoutMode?: google.maps.localContext.PlaceChooserLayoutMode|null;
+    layoutMode?: google.maps.localContext.PlaceChooserLayoutMode | null;
     /**
      * Ignored when <code>layoutMode:HIDDEN</code>. If not passed, a position
      * will be determined automatically based on the <code>layoutMode</code>.
      */
-    position?: google.maps.localContext.PlaceChooserPosition|null;
+    position?: google.maps.localContext.PlaceChooserPosition | null;
   }
 }
 declare namespace google.maps.localContext {
@@ -8992,17 +8996,17 @@ declare namespace google.maps.localContext {
    */
   interface PlaceDetailsViewSetupOptions {
     hidesOnMapClick?: boolean;
-    layoutMode?: google.maps.localContext.PlaceDetailsLayoutMode|null;
+    layoutMode?: google.maps.localContext.PlaceDetailsLayoutMode | null;
     /**
      * Ignored when <code>layoutMode:INFO_WINDOW</code>. If not passed, a
      * position will be determined automatically based on the
      * <code>layoutMode</code>.
      */
-    position?: google.maps.localContext.PlaceDetailsPosition|null;
+    position?: google.maps.localContext.PlaceDetailsPosition | null;
   }
 }
 declare namespace google.maps.localContext {
-  type PlaceTypePreference = {type: string, weight?: number};
+  type PlaceTypePreference = { type: string, weight?: number };
 }
 declare namespace google.maps.places {
   /**
@@ -9022,18 +9026,18 @@ declare namespace google.maps.places {
      * @param opts Options.
      */
     constructor(
-        inputField: HTMLInputElement,
-        opts?: google.maps.places.AutocompleteOptions|null);
+      inputField: HTMLInputElement,
+      opts?: google.maps.places.AutocompleteOptions | null);
     /**
      * Returns the bounds to which predictions are biased.
      */
-    getBounds(): google.maps.LatLngBounds|undefined;
+    getBounds(): google.maps.LatLngBounds | undefined;
     /**
      * Returns the fields to be included for the Place in the details response
      * when the details are successfully retrieved. For a list of fields
      * see {@link google.maps.places.PlaceResult}.
      */
-    getFields(): string[]|undefined;
+    getFields(): string[] | undefined;
     /**
      * Returns the details of the Place selected by user if the details were
      * successfully retrieved. Otherwise returns a stub Place object, with the
@@ -9045,8 +9049,8 @@ declare namespace google.maps.places {
      * biased towards, but not restricted to, this area.
      * @param bounds The biasing bounds.
      */
-    setBounds(bounds: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|
-              undefined): void;
+    setBounds(bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral |
+      undefined): void;
     /**
      * Sets the component restrictions. Component restrictions are used to
      * restrict predictions to only those within the parent component. For
@@ -9054,15 +9058,15 @@ declare namespace google.maps.places {
      * @param restrictions The restrictions to use.
      */
     setComponentRestrictions(restrictions:
-                                 google.maps.places.ComponentRestrictions|
-                             null): void;
+      google.maps.places.ComponentRestrictions |
+      null): void;
     /**
      * Sets the fields to be included for the Place in the details response when
      * the details are successfully retrieved. For a list of fields see {@link
      * google.maps.places.PlaceResult}.
      */
-    setFields(fields: string[]|undefined): void;
-    setOptions(options: google.maps.places.AutocompleteOptions|null): void;
+    setFields(fields: string[] | undefined): void;
+    setOptions(options: google.maps.places.AutocompleteOptions | null): void;
     /**
      * Sets the types of predictions to be returned. For supported types, see
      * the <a
@@ -9071,7 +9075,7 @@ declare namespace google.maps.places {
      * returned.
      * @param types The types of predictions to be included.
      */
-    setTypes(types: string[]|null): void;
+    setTypes(types: string[] | null): void;
   }
 }
 declare namespace google.maps.places {
@@ -9082,7 +9086,7 @@ declare namespace google.maps.places {
     /**
      * The area in which to search for places.
      */
-    bounds?: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * The component restrictions. Component restrictions are used to restrict
      * predictions to only those within the parent component. For example, the
@@ -9203,11 +9207,11 @@ declare namespace google.maps.places {
      *     objects and a PlacesServiceStatus value as argument.
      */
     getPlacePredictions(
-        request: google.maps.places.AutocompletionRequest,
-        callback?:
-            (a: google.maps.places.AutocompletePrediction[]|null,
-             b: google.maps.places.PlacesServiceStatus) => void):
-        Promise<google.maps.places.AutocompleteResponse>;
+      request: google.maps.places.AutocompletionRequest,
+      callback?:
+        (a: google.maps.places.AutocompletePrediction[] | null,
+          b: google.maps.places.PlacesServiceStatus) => void):
+      Promise<google.maps.places.AutocompleteResponse>;
     /**
      * Retrieves query autocomplete predictions based on the supplied query
      * autocomplete request.
@@ -9217,10 +9221,10 @@ declare namespace google.maps.places {
      *     as argument.
      */
     getQueryPredictions(
-        request: google.maps.places.QueryAutocompletionRequest,
-        callback:
-            (a: google.maps.places.QueryAutocompletePrediction[]|null,
-             b: google.maps.places.PlacesServiceStatus) => void): void;
+      request: google.maps.places.QueryAutocompletionRequest,
+      callback:
+        (a: google.maps.places.QueryAutocompletePrediction[] | null,
+          b: google.maps.places.PlacesServiceStatus) => void): void;
   }
 }
 declare namespace google.maps.places {
@@ -9230,7 +9234,7 @@ declare namespace google.maps.places {
    * google.maps.places.AutocompleteService.getPlacePredictions} calls followed
    * by a single {@link google.maps.places.PlacesService.getDetails} call.
    */
-  class AutocompleteSessionToken {}
+  class AutocompleteSessionToken { }
 }
 declare namespace google.maps.places {
   /**
@@ -9244,7 +9248,7 @@ declare namespace google.maps.places {
      * <code>location</code> and <code>radius</code> will be ignored if
      * <code>bounds</code> is set.
      */
-    bounds?: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * The component restrictions. Component restrictions are used to restrict
      * predictions to only those within the parent component. For example, the
@@ -9264,7 +9268,7 @@ declare namespace google.maps.places {
      * of supported languages</a>. Google often updates the supported languages,
      * so this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * Location for prediction biasing. Predictions will be biased towards the
      * given <code>location</code> and <code>radius</code>. Alternatively,
@@ -9281,7 +9285,7 @@ declare namespace google.maps.places {
      * google.maps.places.AutocompletePrediction.distance_meters} is calculated
      * from.
      */
-    origin?: google.maps.LatLng|google.maps.LatLngLiteral;
+    origin?: google.maps.LatLng | google.maps.LatLngLiteral;
     /**
      * The radius of the area used for prediction biasing. The
      * <code>radius</code> is specified in meters, and must always be
@@ -9302,7 +9306,7 @@ declare namespace google.maps.places {
      * (technically for the entity of &quot;The United Kingdom of Great Britain
      * and Northern Ireland&quot;).
      */
-    region?: string|null;
+    region?: string | null;
     /**
      * Unique reference used to bundle individual requests into sessions.
      */
@@ -9351,7 +9355,7 @@ declare namespace google.maps.places {
      * <code>'br'</code>, or <code>'au'</code>. You can provide a single one, or
      * an array of up to five country code strings.
      */
-    country: string|string[]|null;
+    country: string | string[] | null;
   }
 }
 declare namespace google.maps.places {
@@ -9378,15 +9382,15 @@ declare namespace google.maps.places {
      * supported languages</a>. Google often updates the supported languages, so
      * this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * The bias used when searching for Place. The result will be biased
      * towards, but not restricted to, the given {@link
      * google.maps.places.LocationBias}.
      */
-    locationBias?: google.maps.LatLng|google.maps.LatLngLiteral|
-        google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|
-        google.maps.Circle|google.maps.CircleLiteral|string;
+    locationBias?: google.maps.LatLng | google.maps.LatLngLiteral |
+    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral |
+    google.maps.Circle | google.maps.CircleLiteral | string;
     /**
      * The phone number of the place to look up. Format must be <a
      * href="https://en.wikipedia.org/wiki/E.164">E.164</a>.
@@ -9418,15 +9422,15 @@ declare namespace google.maps.places {
      * supported languages</a>. Google often updates the supported languages, so
      * this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * The bias used when searching for Place. The result will be biased
      * towards, but not restricted to, the given {@link
      * google.maps.places.LocationBias}.
      */
-    locationBias?: google.maps.LatLng|google.maps.LatLngLiteral|
-        google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral|
-        google.maps.Circle|google.maps.CircleLiteral|string;
+    locationBias?: google.maps.LatLng | google.maps.LatLngLiteral |
+    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral |
+    google.maps.Circle | google.maps.CircleLiteral | string;
     /**
      * The request&#39;s query. For example, the name or address of a place.
      */
@@ -9434,14 +9438,14 @@ declare namespace google.maps.places {
   }
 }
 declare namespace google.maps.places {
-  type LocationBias = google.maps.LatLng|google.maps.LatLngLiteral|
-                      google.maps.LatLngBounds|
-                      google.maps.LatLngBoundsLiteral|google.maps.Circle|
-                      google.maps.CircleLiteral|string;
+  type LocationBias = google.maps.LatLng | google.maps.LatLngLiteral |
+    google.maps.LatLngBounds |
+    google.maps.LatLngBoundsLiteral | google.maps.Circle |
+    google.maps.CircleLiteral | string;
 }
 declare namespace google.maps.places {
   type LocationRestriction =
-      google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
 }
 declare namespace google.maps.places {
   /**
@@ -9451,11 +9455,11 @@ declare namespace google.maps.places {
     /**
      * The maximum height in pixels of the returned image.
      */
-    maxHeight?: number|null;
+    maxHeight?: number | null;
     /**
      * The maximum width in pixels of the returned image.
      */
-    maxWidth?: number|null;
+    maxWidth?: number | null;
   }
 }
 declare namespace google.maps.places {
@@ -9501,7 +9505,7 @@ declare namespace google.maps.places {
      * supported languages</a>. Google often updates the supported languages, so
      * this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * The Place ID of the Place for which details are being requested.
      */
@@ -9518,7 +9522,7 @@ declare namespace google.maps.places {
      * (technically for the entity of &quot;The United Kingdom of Great Britain
      * and Northern Ireland&quot;).
      */
-    region?: string|null;
+    region?: string | null;
     /**
      * Unique reference used to bundle the details request with an autocomplete
      * session.
@@ -9559,7 +9563,7 @@ declare namespace google.maps.places {
      * method does not take exceptional hours, such as holiday hours, into
      * consideration.
      */
-    isOpen(date?: Date): boolean|undefined;
+    isOpen(date?: Date): boolean | undefined;
     /**
      * Whether the Place is open at the current time.
      * @deprecated <code>open_now</code> is deprecated as of November 2019. Use
@@ -9958,7 +9962,7 @@ declare namespace google.maps.places {
      * The bounds within which to search for Places. Both <code>location</code>
      * and <code>radius</code> will be ignored if <code>bounds</code> is set.
      */
-    bounds?: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * A term to be matched against all available fields, including but not
      * limited to name, type, and address, as well as customer reviews and other
@@ -9973,11 +9977,11 @@ declare namespace google.maps.places {
      * supported languages</a>. Google often updates the supported languages, so
      * this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * The location around which to search for Places.
      */
-    location?: google.maps.LatLng|google.maps.LatLngLiteral;
+    location?: google.maps.LatLng | google.maps.LatLngLiteral;
     /**
      * Restricts results to only those places at the specified price level or
      * lower. Valid values are in the range from 0 (most affordable) to 4 (most
@@ -10038,7 +10042,7 @@ declare namespace google.maps.places {
      * Contains methods related to searching for places and retrieving details
      * about a place.
      */
-    constructor(attrContainer: HTMLDivElement|google.maps.Map);
+    constructor(attrContainer: HTMLDivElement | google.maps.Map);
     /**
      * Retrieves a list of places based on a phone number. In most cases there
      * should be just one item in the result list, however if the request is
@@ -10051,10 +10055,10 @@ declare namespace google.maps.places {
      * place.
      */
     findPlaceFromPhoneNumber(
-        request: google.maps.places.FindPlaceFromPhoneNumberRequest,
-        callback:
-            (a: google.maps.places.PlaceResult[]|null,
-             b: google.maps.places.PlacesServiceStatus) => void): void;
+      request: google.maps.places.FindPlaceFromPhoneNumberRequest,
+      callback:
+        (a: google.maps.places.PlaceResult[] | null,
+          b: google.maps.places.PlacesServiceStatus) => void): void;
     /**
      * Retrieves a list of places based on a query string. In most cases there
      * should be just one item in the result list, however if the request is
@@ -10067,19 +10071,19 @@ declare namespace google.maps.places {
      * place.
      */
     findPlaceFromQuery(
-        request: google.maps.places.FindPlaceFromQueryRequest,
-        callback:
-            (a: google.maps.places.PlaceResult[]|null,
-             b: google.maps.places.PlacesServiceStatus) => void): void;
+      request: google.maps.places.FindPlaceFromQueryRequest,
+      callback:
+        (a: google.maps.places.PlaceResult[] | null,
+          b: google.maps.places.PlacesServiceStatus) => void): void;
     /**
      * Retrieves details about the place identified by the given
      * <code>placeId</code>.
      */
     getDetails(
-        request: google.maps.places.PlaceDetailsRequest,
-        callback:
-            (a: google.maps.places.PlaceResult|null,
-             b: google.maps.places.PlacesServiceStatus) => void): void;
+      request: google.maps.places.PlaceDetailsRequest,
+      callback:
+        (a: google.maps.places.PlaceResult | null,
+          b: google.maps.places.PlacesServiceStatus) => void): void;
     /**
      * Retrieves a list of places near a particular location, based on keyword
      * or type. Location must always be specified, either by passing a
@@ -10097,11 +10101,11 @@ declare namespace google.maps.places {
      * results or if there is only one page of results).
      */
     nearbySearch(
-        request: google.maps.places.PlaceSearchRequest,
-        callback:
-            (a: google.maps.places.PlaceResult[]|null,
-             b: google.maps.places.PlacesServiceStatus,
-             c: google.maps.places.PlaceSearchPagination|null) => void): void;
+      request: google.maps.places.PlaceSearchRequest,
+      callback:
+        (a: google.maps.places.PlaceResult[] | null,
+          b: google.maps.places.PlacesServiceStatus,
+          c: google.maps.places.PlaceSearchPagination | null) => void): void;
     /**
      * Retrieves a list of places based on a query string (for example,
      * &quot;pizza in New York&quot;, or &quot;shoe stores near Ottawa&quot;).
@@ -10115,11 +10119,11 @@ declare namespace google.maps.places {
      * only one page of results).
      */
     textSearch(
-        request: google.maps.places.TextSearchRequest,
-        callback:
-            (a: google.maps.places.PlaceResult[]|null,
-             b: google.maps.places.PlacesServiceStatus,
-             c: google.maps.places.PlaceSearchPagination|null) => void): void;
+      request: google.maps.places.TextSearchRequest,
+      callback:
+        (a: google.maps.places.PlaceResult[] | null,
+          b: google.maps.places.PlacesServiceStatus,
+          c: google.maps.places.PlaceSearchPagination | null) => void): void;
   }
 }
 declare namespace google.maps.places {
@@ -10236,7 +10240,7 @@ declare namespace google.maps.places {
      * <code>location</code> and <code>radius</code> will be ignored if
      * <code>bounds</code> is set.
      */
-    bounds?: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * The user entered input string.
      */
@@ -10291,23 +10295,23 @@ declare namespace google.maps.places {
      * presented as a drop-down list, and is updated as text is entered.
      */
     constructor(
-        inputField: HTMLInputElement,
-        opts?: google.maps.places.SearchBoxOptions|null);
+      inputField: HTMLInputElement,
+      opts?: google.maps.places.SearchBoxOptions | null);
     /**
      * Returns the bounds to which query predictions are biased.
      */
-    getBounds(): google.maps.LatLngBounds|undefined;
+    getBounds(): google.maps.LatLngBounds | undefined;
     /**
      * Returns the query selected by the user to be used with
      * <code>places_changed</code> event.
      */
-    getPlaces(): google.maps.places.PlaceResult[]|undefined;
+    getPlaces(): google.maps.places.PlaceResult[] | undefined;
     /**
      * Sets the region to use for biasing query predictions. Results will only
      * be biased towards this area and not be completely restricted to it.
      */
-    setBounds(bounds: google.maps.LatLngBounds|null|
-              google.maps.LatLngBoundsLiteral): void;
+    setBounds(bounds: google.maps.LatLngBounds | null |
+      google.maps.LatLngBoundsLiteral): void;
   }
 }
 declare namespace google.maps.places {
@@ -10319,7 +10323,7 @@ declare namespace google.maps.places {
      * The area towards which to bias query predictions. Predictions are biased
      * towards, but not restricted to, queries targeting these bounds.
      */
-    bounds?: google.maps.LatLngBounds|null|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | null | google.maps.LatLngBoundsLiteral;
   }
 }
 declare namespace google.maps.places {
@@ -10360,7 +10364,7 @@ declare namespace google.maps.places {
      * <code>bounds</code> is set. Results will not be restricted to those
      * inside these bounds; but, results inside it will rank higher.
      */
-    bounds?: google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral;
+    bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;
     /**
      * Available only in the v=beta channel: https://goo.gle/3oAthT3.
      * A language identifier for the language in which names and addresses
@@ -10369,11 +10373,11 @@ declare namespace google.maps.places {
      * supported languages</a>. Google often updates the supported languages, so
      * this list may not be exhaustive.
      */
-    language?: string|null;
+    language?: string | null;
     /**
      * The center of the area used to bias results when searching for Places.
      */
-    location?: google.maps.LatLng|google.maps.LatLngLiteral;
+    location?: google.maps.LatLng | google.maps.LatLngLiteral;
     /**
      * The request&#39;s query term. For example, the name of a place
      * (&#39;Eiffel Tower&#39;), a category followed by the name of a location
@@ -10398,7 +10402,7 @@ declare namespace google.maps.places {
      * (technically for the entity of &quot;The United Kingdom of Great Britain
      * and Northern Ireland&quot;).
      */
-    region?: string|null;
+    region?: string | null;
     /**
      * Searches for places of the given type. The type is translated to the
      * local language of the request&#39;s target location and used as a query
@@ -10427,27 +10431,27 @@ declare namespace google.maps.visualization {
      * A layer that provides a client-side rendered heatmap, depicting the
      * intensity of data at geographical points.
      */
-    constructor(opts?: google.maps.visualization.HeatmapLayerOptions|null);
+    constructor(opts?: google.maps.visualization.HeatmapLayerOptions | null);
     /**
      * Returns the data points currently displayed by this heatmap.
      */
-    getData(): google.maps.MVCArray<google.maps.LatLng|
-                                    google.maps.visualization.WeightedLocation>;
-    getMap(): google.maps.Map|undefined;
+    getData(): google.maps.MVCArray<google.maps.LatLng |
+      google.maps.visualization.WeightedLocation>;
+    getMap(): google.maps.Map | undefined;
     /**
      * Sets the data points to be displayed by this heatmap.
      */
     setData(data: google.maps.MVCArray<
-            google.maps.LatLng|google.maps.visualization.WeightedLocation>|
-            (google.maps.LatLng|google.maps.visualization.WeightedLocation)[]):
-        void;
+      google.maps.LatLng | google.maps.visualization.WeightedLocation> |
+      (google.maps.LatLng | google.maps.visualization.WeightedLocation)[]):
+      void;
     /**
      * Renders the heatmap on the specified map. If map is set to
      * <code>null</code>, the heatmap will be removed.
      */
-    setMap(map: google.maps.Map|null): void;
-    setOptions(options: google.maps.visualization.HeatmapLayerOptions|
-               null): void;
+    setMap(map: google.maps.Map | null): void;
+    setOptions(options: google.maps.visualization.HeatmapLayerOptions |
+      null): void;
   }
 }
 declare namespace google.maps.visualization {
@@ -10459,41 +10463,41 @@ declare namespace google.maps.visualization {
     /**
      * The data points to display. Required.
      */
-    data?: google.maps.MVCArray<google.maps.LatLng|
-                                google.maps.visualization.WeightedLocation>|
-        null|(google.maps.LatLng|google.maps.visualization.WeightedLocation)[];
+    data?: google.maps.MVCArray<google.maps.LatLng |
+      google.maps.visualization.WeightedLocation> |
+    null | (google.maps.LatLng | google.maps.visualization.WeightedLocation)[];
     /**
      * Specifies whether heatmaps dissipate on zoom. By default, the radius of
      * influence of a data point is specified by the radius option only. When
      * dissipating is disabled, the radius option is interpreted as a radius at
      * zoom level 0.
      */
-    dissipating?: boolean|null;
+    dissipating?: boolean | null;
     /**
      * The color gradient of the heatmap, specified as an array of CSS color
      * strings. All CSS3 colors are supported except for extended named colors.
      */
-    gradient?: string[]|null;
+    gradient?: string[] | null;
     /**
      * The map on which to display the layer.
      */
-    map?: google.maps.Map|null;
+    map?: google.maps.Map | null;
     /**
      * The maximum intensity of the heatmap. By default, heatmap colors are
      * dynamically scaled according to the greatest concentration of points at
      * any particular pixel on the map. This property allows you to specify a
      * fixed maximum.
      */
-    maxIntensity?: number|null;
+    maxIntensity?: number | null;
     /**
      * The opacity of the heatmap, expressed as a number between 0 and 1.
      * @defaultValue <code>0.6</code>
      */
-    opacity?: number|null;
+    opacity?: number | null;
     /**
      * The radius of influence for each data point, in pixels.
      */
-    radius?: number|null;
+    radius?: number | null;
   }
 }
 declare namespace google.maps.visualization {
@@ -10505,7 +10509,7 @@ declare namespace google.maps.visualization {
     /**
      * The location of the data point.
      */
-    location: google.maps.LatLng|null;
+    location: google.maps.LatLng | null;
     /**
      * The weighting value of the data point.
      */
